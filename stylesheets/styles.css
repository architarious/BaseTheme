@import 'https://fonts.googleapis.com/css?family=Crete+Round|Open+Sans';.eq-block:before{display:none;content:"Small: 300, Medium: 400, Large: 500"}.eq-block--detail:before{display:none;content:"xxSmall: 0, xSmall: 150, Small: 300, Medium: 400, Large: 500, xLarge: 650, xxLarge: 800"}h1,.b-siteName,h2,h3,h4,h5,h6,.heading{font-family:'Crete Round', serif;font-weight:normal;color:#f26157}body,p,li,a{font-family:'Open Sans', sans-serif;color:#2c2a29}p{line-height:1.618em;font-size:1.25em}a{color:#f7db0c}a:hover{color:#f9e23d}body{background-color:#fffefb;font-size:16px}section{width:100%;float:left;padding:6em 0}.btn{padding:0.618em;background-color:#f7db0c;color:#2c2a29;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #f7db0c}.btn:hover{background-color:#f9e23d;border-color:#f9e23d;color:#464342}.btn--outline{padding:0.618em;background-color:#f7db0c;color:#f7db0c;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #f7db0c;background-color:#fffefb}.btn--outline:hover{background-color:#f9e23d;border-color:#f9e23d;color:#f9e23d}.btn--outline:hover{background-color:#fffefb}.navList{padding:0;margin:0;list-style:none}.navList li{display:inline-block;padding:0 1em;margin:0;float:left;border-right:1px solid #f0efec;box-shadow:0 1px 0x 0 #fffefb}.navList li:last-child{box-shadow:none;border-right:0}.navList li a{font-size:1.2em;color:#f26157;text-decoration:none;text-transform:uppercase}.navList li a:hover{color:#f47c73;text-decoration:underline}.container{width:87.66%;margin:0 auto}.b-ctaCard{width:100%;float:left}.b-ctaCard__imgWrapper{width:100%;float:left;padding:0;margin:0;position:relative}.b-ctaCard__img{width:100%;height:auto;padding:0;margin:0;float:left;border-top-left-radius:0.382em;border-top-right-radius:0.382em}.b-ctaCard__caption{position:absolute;bottom:0;width:97%;float:left;background-color:rgba(44,42,41,0.6);color:#fffefb;padding:0.618em 1.5%;margin:0}.b-ctaCard__caption p{color:#fffefb;font-size:1em;line-height:1.618em;padding:0;margin:0}.b-ctaCard__cta{width:97%;float:left;background-color:#f26157;height:3em;padding:0.618em 1.5%;border-bottom-left-radius:0.382em;border-bottom-right-radius:0.382em}.b-ctaCard__cta .btn{padding:0.618em;background-color:#fffefb;color:#f26157;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #fffefb;float:left}.b-ctaCard__cta .btn:hover{background-color:#fff;border-color:#fff;color:#f68e86}.b-ctaCard__cta .btn--donate{padding:0.618em;background-color:#fffefb;color:#fffefb;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #fffefb;background-color:#f26157;float:left;margin-left:1em}.b-ctaCard__cta .btn--donate:hover{background-color:#fff;border-color:#fff;color:#fff}.b-ctaCard__cta .btn--donate:hover{background-color:#f26157}.b-primaryNav{padding:2.5em 0}.b-primaryNav .navList{float:right}.b-siteName{width:50%;float:left;font-size:2em;padding:1em 0;margin:0;font-size:1.875em;line-height:1.3348em;margin-top:1.07985em;padding-top:0em;padding-bottom:0em;margin-bottom:.41245em}.m-navbar{width:100%;float:left;margin-top:0em;padding-top:1.56422em;padding-bottom:1.56422em;margin-bottom:0em}.m-navbar .b-siteName{float:left}.m-navbar .b-primaryNav{float:right}.s-opener{width:100%;float:left;padding:3em 0;background:-webkit-linear-gradient(left, #f26157, #f27d5f);background:linear-gradient(90deg, #f26157, #f27d5f);background-size:400% 400%;-webkit-animation:open 40s ease infinite;animation:open 40s ease infinite}@-webkit-keyframes open{0%{background-position:0% 51%}50%{background-position:100% 50%}100%{background-position:0% 51%}}@keyframes open{0%{background-position:0% 51%}50%{background-position:100% 50%}100%{background-position:0% 51%}}.s-opener__kicker{width:48%;float:left;margin-right:2%}.s-opener__kicker h1,.s-opener__kicker .b-siteName{color:#fffefb;font-size:3.272em}.s-opener__cta{width:48%;float:left;margin-left:2%}@media (min-width: 0) and (max-width: 60rem){.s-opener__kicker{width:100%;float:left;margin:0;margin-top:.77335em;padding-top:0em;padding-bottom:0em;margin-bottom:.77335em}.s-opener__cta{width:100%;float:left;margin:0;margin-top:.77335em;padding-top:0em;padding-bottom:0em;margin-bottom:.77335em}}@media (min-width: 0){.s-header .b-siteName{float:none;width:100%;margin:0 auto;padding:16px 0}.s-header .b-primaryNav{float:none;width:100%;margin:0 auto;padding:16px 0}}@media (min-width: 48rem){.s-header .b-siteName{padding:0;width:35.89744%;float:left;margin-right:-100%;margin-left:0;clear:none}.s-header .b-primaryNav{padding:0;width:61.53846%;float:right;margin-left:0;margin-right:0;clear:none}}@media (min-width: 60rem){.s-header .b-siteName{padding:0;width:23.72881%;float:left;margin-right:-100%;margin-left:0;clear:none}.s-header .b-primaryNav{padding:0;width:74.57627%;float:right;margin-left:0;margin-right:0;clear:none}}@media (min-width: 78rem){.s-header .b-siteName{padding:0;width:23.80952%;float:left;margin-right:-100%;margin-left:0;clear:none}.s-header .b-primaryNav{padding:0;width:74.60317%;float:right;margin-left:0;margin-right:0;clear:none}}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjFfc3R5bGVndWlkZS9fdHlwb2dyYXBoeS5zY3NzIiwiMV9zdHlsZWd1aWRlL19lcS5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9lcS5qcy9zYXNzL19lcS5zY3NzIiwiMV9zdHlsZWd1aWRlL19jb2xvcnMuc2NzcyIsIjFfc3R5bGVndWlkZS9fYmFzZS5zY3NzIiwiMl9vYmplY3RzL19idG4uc2NzcyIsIjJfb2JqZWN0cy9fbmF2TGlzdC5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9jb2xvci1zY2hlbWVyL3N0eWxlc2hlZXRzL2NvbG9yLXNjaGVtZXIvX3RpbnQtc2hhZGUuc2NzcyIsIjJfb2JqZWN0cy9fY29udGFpbmVyLnNjc3MiLCIzX2Jsb2Nrcy9fYi1jdGFDYXJkLnNjc3MiLCIzX2Jsb2Nrcy9fYi1wcmltYXJ5TmF2LnNjc3MiLCIzX2Jsb2Nrcy9fYi1zaXRlTmFtZS5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9jb21wYXNzLW1peGlucy9saWIvY29tcGFzcy90eXBvZ3JhcGh5L192ZXJ0aWNhbF9yaHl0aG0uc2NzcyIsIjRfbW9kdWxlcy9fbS1uYXZiYXIuc2NzcyIsIjVfc2VjdGlvbnMvX3Mtb3BlbmVyLnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9fYnJlYWtwb2ludC5zY3NzIiwiNV9zZWN0aW9ucy9fcy1oZWFkZXIuc2NzcyIsIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvc2luZ3VsYXJpdHkvc3R5bGVzaGVldHMvc2luZ3VsYXJpdHlncy9fYXBpLnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL3Npbmd1bGFyaXR5L3N0eWxlc2hlZXRzL3Npbmd1bGFyaXR5Z3MvYXBpL19pc29sYXRpb24uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUNBQSxpQkNzR0ksYUFDQSw2Q0FBZ0QsQ0FDakQseUJBRkMsYUFDQSxpR0FBZ0QsQ0FDakQs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QkFBQSxXQUFBLG1CQUFBLGNBQUEsVUNwQjBDLENGN0U5Qyx3QkFlaUIsVUNrRmIsZ0JBQUEsWUFBQSxjQUFBLGVBQUEsVUNwQjBDLENGOURTLENEaURuRCwwQkNoRUosc0JBbUJlLFVDOEVYLGdCQUFBLFdBQUEsbUJBQUEsY0FBQSxVQ3BCMEMsQ0Y3RTlDLHdCQW9CaUIsVUM2RWIsZ0JBQUEsWUFBQSxjQUFBLGVBQUEsVUNwQjBDLENGekRVLENBQUEiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DcmV0ZStSb3VuZHxPcGVuK1NhbnMnO1xyXG5cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8vQmFzZUxpbmVcclxuLy9cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcclxuJGJhc2UtbGluZS1oZWlnaHQ6IDIwLjAyMnB4O1xyXG4kZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuJHJlbGF0aXZlLWZvbnQtc2l6aW5nOiB0cnVlO1xyXG4kcm91bmQtdG8tbmVhcmVzdC1oYWxmLWxpbmU6IHRydWU7XHJcbiRtaW4tbGluZS1wYWRkaW5nOiAycHg7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy9Gb250IFNpemVzXHJcbi8vXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4kcm9vdC1mb250LXNpemU6IDE2O1xyXG4kcm9vdC1saW5lLWhlaWdodDogMjA7XHJcbiRnUmF0aW86IDEuNjE4O1xyXG4kbW9kUmF0aW86IDAuNjE4O1xyXG5cclxuJGZvbnQtc2l6ZS1zbWFsbCA6IG1zKC0yKTtcclxuJGZvbnQtc2l6ZS1zbWFsbC0yIDogbXMoLTEpO1xyXG4kZm9udC1zaXplLW1lZCA6IG1zKDApO1xyXG4kZm9udC1zaXplLW1lZC0yOiBtcygxKTtcclxuJGZvbnQtc2l6ZS1sYXJnZSA6IG1zKDIpO1xyXG4kZm9udC1zaXplLWxhcmdlLTIgOiBtcygzKTtcclxuJGZvbnQtc2l6ZS14bGFyZ2U6IG1zKDQpO1xyXG4kZm9udC1zaXplLXhsYXJnZS0yOiBtcyg1KTtcclxuJGZvbnQtc2l6ZS14eGxhcmdlOiBtcyg2KTtcclxuJGZvbnQtc2l6ZS14eGxhcmdlLTI6IG1zKDcpO1xyXG4kZm9udC1zaXplLXh4eGxhcmdlOiBtcyg4KTtcclxuJGZvbnQtc2l6ZS14eHhsYXJnZS0yOiBtcyg5KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vL0xpbmUtaGVpZ2h0IFNpemVzXHJcbi8vXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGxoLXNpemUtc21hbGwgOiBtcygwKTtcclxuJGxoLXNpemUtc21hbGwtMiA6IG1zKDEpO1xyXG4kbGgtc2l6ZS1tZWQgOiBtcygyKTtcclxuJGxoLXNpemUtbWVkLTI6IG1zKDMpO1xyXG4kbGgtc2l6ZS1sYXJnZSA6IG1zKDQpO1xyXG4kbGgtc2l6ZS1sYXJnZS0yIDogbXMoNSk7XHJcbiRsaC1zaXplLXhsYXJnZTogbXMoNik7XHJcbiRsaC1zaXplLXhsYXJnZS0yOiBtcyg3KTtcclxuJGxoLXNpemUteHhsYXJnZTogbXMoOCk7XHJcbiRsaC1zaXplLXh4bGFyZ2UtMjogbXMoOSk7XHJcbiRsaC1zaXplLXh4eGxhcmdlOiBtcygxMCk7XHJcbiRsaC1zaXplLXh4eGxhcmdlLTI6IG1zKDExKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8vU3BhY2UgYW5kIHBhZGRpbmcgZGVmYXVsdHNcclxuLy9cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiRzcGFjZSA6IDFlbTtcclxuJHBhZCA6IDEuNjE4ZW07XHJcblxyXG5cclxuJHNwYWNlLXF1YXJ0ZXI6ICRzcGFjZSowLjI1O1xyXG4kc3BhY2UtaGFsZjogJHNwYWNlKjAuNTtcclxuLy8kc3BhY2UgOiAxZW07XHJcbiRzcGFjZS1hbmQtaGFsZiA6ICRzcGFjZSoxLjU7XHJcbiRzcGFjZS1kb3VibGUgOiAkc3BhY2UqMjtcclxuJHNwYWNlLXF1YWQgOiAkc3BhY2UqNDtcclxuJHNwYWNlLWhhbGYgOiAkc3BhY2UvMjtcclxuXHJcbiRwYWQtcXVhcnRlcjogJHBhZCowLjI1O1xyXG4kcGFkLWhhbGY6JHBhZCowLjU7XHJcbi8vJHBhZCA6IDEuNjE4cmVtO1xyXG4kcGFkLWFuZC1oYWxmIDogJHBhZCoxLjU7XHJcbiRwYWQtZG91YmxlIDogJHBhZCoyO1xyXG4kcGFkLWhhbGYgOiAkcGFkLzI7XHJcbiRwYWQtcXVhcnRlciA6JHBhZC80O1xyXG5cclxuXHJcblxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCAuaGVhZGluZ3tcclxuICBmb250LWZhbWlseTogJ0NyZXRlIFJvdW5kJywgc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICBjb2xvcjogJHByaW1hcnk7XHJcbn1cclxuYm9keSwgcCwgbGksIGF7XHJcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiRibGFjaztcclxufVxyXG5we1xyXG4gIGxpbmUtaGVpZ2h0OjEuNjE4ZW07XHJcbiAgZm9udC1zaXplOjEuMjVlbTtcclxufVxyXG5he1xyXG4gIGNvbG9yOiR0ZXJ0aWFyeTtcclxuICAmOmhvdmVyeyBjb2xvcjpsaWdodGVuKCR0ZXJ0aWFyeSwgMTApO31cclxufSIsIi5lcS1ibG9jayB7XHJcbiAgQGluY2x1ZGUgZXEtcHRzKChcclxuICAgIFNtYWxsOiAzMDAsXHJcbiAgICBNZWRpdW06IDQwMCxcclxuICAgIExhcmdlOiA1MDBcclxuICApKTtcclxufS8vZW5kIGVxLWJsb2NrXHJcblxyXG4uZXEtYmxvY2stLWRldGFpbCB7XHJcbiAgQGluY2x1ZGUgZXEtcHRzKChcclxuICAgIHh4U21hbGw6IDAsXHJcbiAgICB4U21hbGw6IDE1MCxcclxuICAgIFNtYWxsOiAzMDAsXHJcbiAgICBNZWRpdW06IDQwMCxcclxuICAgIExhcmdlOiA1MDAsXHJcbiAgICB4TGFyZ2U6IDY1MCxcclxuICAgIHh4TGFyZ2U6IDgwMFxyXG4gICkpO1xyXG59Ly9lbmQgZXEtYmxvY2stLWRldGFpbFxyXG5cclxuXHJcbkBtaXhpbiBlcU5vdGlmaWVyKCR0ZXN0OiBvbil7XHJcbiAgLy8kdGVzdDpvZmY7ICAvL0VuYWJsZSBvciBkaXNhYmxlIHRlc3RpbmdcclxuICAkZXFDb2xvcjogJGJsYWNrO1xyXG4gICRlcUNvbG9yX3h4U21hbGw6IHNldC1hbHBoYSh0aW50KHJlZCwgMzApLCAwLjMpO1xyXG4gICRlcUNvbG9yX3hTbWFsbDogc2V0LWFscGhhKHRpbnQocmVkLCAxNSksIDAuMyk7XHJcbiAgJGVxQ29sb3JfU21hbGw6c2V0LWFscGhhKHJlZCwgMC4zKTtcclxuICAkZXFDb2xvcl9NZWRpdW06c2V0LWFscGhhKGdyZWVuLCAwLjMpO1xyXG4gICRlcUNvbG9yX0xhcmdlOnNldC1hbHBoYShibHVlLCAwLjMpO1xyXG4gICRlcUNvbG9yX3hMYXJnZTogc2V0LWFscGhhKHRpbnQoYmx1ZSwgMTUpLCAwLjMpOyAgXHJcbiAgJGVxQ29sb3JfeHhMYXJnZTogc2V0LWFscGhhKHRpbnQoYmx1ZSwgMzApLCAwLjMpO1xyXG5cclxuIFxyXG4gICZbZGF0YS1lcS1zdGF0ZT1cInhTbWFsbFwiXXtcclxuICAgICAgQGlmICR0ZXN0PT0nb24neyRlcUNvbG9yOiAkZXFDb2xvcl94U21hbGw7IGJhY2tncm91bmQ6ICRlcUNvbG9yOyAmOmJlZm9yZXtjb250ZW50OlwieC1zbWFsbFwiOyBjb2xvcjpkYXJrZW4oJGVxQ29sb3IsNDApO319XHJcbiAgICAgICRlcUNvbG9yOiAkZXFDb2xvcl94U21hbGw7IGJhY2tncm91bmQ6ICRlcUNvbG9yOyAmOmJlZm9yZXtjb250ZW50OlwieC1zbWFsbFwiOyBjb2xvcjpkYXJrZW4oJGVxQ29sb3IsNDApO31cclxuICAgIH0vL2VuZCBlcXhTbWFsbCAgIFxyXG4gICZbZGF0YS1lcS1zdGF0ZT1cIlNtYWxsXCJde1xyXG4gICAgICBAaWYgJHRlc3Q9PSdvbid7JGVxQ29sb3I6ICRlcUNvbG9yX1NtYWxsOyBiYWNrZ3JvdW5kOiAkZXFDb2xvcjsgJjpiZWZvcmV7Y29udGVudDpcIlNtYWxsXCI7IGNvbG9yOmRhcmtlbigkZXFDb2xvciw0MCk7fX1cclxuICAgIH0vL2VuZCBlcXhTbWFsbFxyXG5cclxufVxyXG5cclxuXHJcblxyXG4iLCIvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gVmFyaWFibGVzXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBTZWxlY3RvcnMgdGhhdCB3ZXJlIGNhbGxlZCBmb3IgQ1NTIGVsZW1lbnQgcXVlcmllc1xyXG4kRVEtU2VsZWN0b3JzOiAoKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBFcnJvciBNaXhpblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuQG1peGluIEVRU1RBVEVDSEVDSygkc3RhdGVzLCAkbmFtZSkge1xyXG4gICRFUS1FcnJvcjogJ1lvdSBuZWVkIHRvIGluY2x1ZGUgYSBzdGF0ZSBmb3IgdGhlIGAjeyRuYW1lfWAgbWl4aW4hJztcclxuICBAaWYgKGxlbmd0aCgkc3RhdGVzKSA9PSAwKSB7XHJcbiAgICBAaWYgZmVhdHVyZS1leGlzdHMoYXQtZXJyb3IpIHtcclxuICAgICAgQGVycm9yICRFUS1FcnJvcjtcclxuICAgIH1cclxuICAgIEBlbHNlIHtcclxuICAgICAgQHdhcm4gJEVRLUVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBAZWxzZSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBFbGVtZW50IFF1ZXJpZXMhXHJcbi8vXHJcbi8vICRzdGF0ZXMgLSBMaXN0IG9mIHN0YXRlcyB0byBhcHBseSBzdHlsaW5nIHRvOyBAaW5jbHVkZSBlcShzbWFsbCwgbWVkaXVtLCBsYXJnZSlcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbkBtaXhpbiBlcSgkc3RhdGVzLi4uKSB7XHJcbiAgQGluY2x1ZGUgRVFTVEFURUNIRUNLKCdlcScsICRzdGF0ZXMpIHtcclxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgLy8gTWFya3VwIGJhc2VkIEVsZW1lbnQgUXVlcmllc1xyXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiAgICAkZXh0ZW5kOiB1bmlxdWUtaWQoKTtcclxuICAgIEBhdC1yb290IHtcclxuICAgICAgJSN7JGV4dGVuZH0ge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBAZWFjaCAkc3RhdGUgaW4gJHN0YXRlcyB7XHJcbiAgICAgICZbZGF0YS1lcS1zdGF0ZSQ9XCIjeyRzdGF0ZX1cIl0ge1xyXG4gICAgICAgIEBleHRlbmQgJSN7JGV4dGVuZH07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBFbGVtZW50IFF1ZXJ5IFN0YWNrIVxyXG4vL1xyXG4vLyBDb250YWlucyBvbmUgb2YgdGhlIHF1ZXJ5IHN0YXRlcyFcclxuLy8gJHN0YXRlcyAtIExpc3Qgb2Ygc3RhdGVzIHRvIGFwcGx5IHN0eWxpbmcgdG87IEBpbmNsdWRlIGVxLWNvbnRhaW5zKHNtYWxsLCBtZWRpdW0sIGxhcmdlKVxyXG4vLyAgKiBTcGFjZSBzZXBhcmF0ZWQgbGlzdCB3aWxsIGJlIHRyZWF0ZWQgbGlrZSBhbiBgYW5kYCBtZWRpYSBxdWVyeTsgYWxsIG9mIHRoZSBzdGF0ZXMgbXVzdCBiZSBhY3RpdmVcclxuLy8gICogQ29tbWEgc2VwYXJhdGVkIGxpc3Qgd2lsbCBiZSB0cmVhdGVkIGxpa2UgYW4gYG9yYCBtZWRpYSBxdWVyeTogYXQgbGVhc3Qgb25lIG9mIHRoZSBzdGF0ZXMgbXVzdCBiZSBhY3RpdmVcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbkBtaXhpbiBlcS1jb250YWlucygkc3RhdGVzLi4uKSB7XHJcbiAgLy8gU3BhY2Ugc2VwYXJhdG9yIEFQSSwgc28gZ29pbmcgdG8gZG8gc3R1cGlkIG1hZ2ljXHJcbiAgQGlmIGxlbmd0aCgkc3RhdGVzKSA9PSAxIHtcclxuICAgICRzdGF0ZXM6IG50aCgkc3RhdGVzLCAxKTtcclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIEVRU1RBVEVDSEVDSygnZXEnLCAkc3RhdGVzKSB7XHJcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuICAgIC8vIE1hcmt1cCBiYXNlZCBFbGVtZW50IFF1ZXJpZXNcclxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgJGV4dGVuZDogdW5pcXVlLWlkKCk7XHJcbiAgICBAYXQtcm9vdCB7XHJcbiAgICAgICUjeyRleHRlbmR9IHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGlmIGxpc3Qtc2VwYXJhdG9yKCRzdGF0ZXMpID09ICdzcGFjZScge1xyXG4gICAgICAkc3RhdGVBcHBseTogJyc7XHJcblxyXG4gICAgICBAZWFjaCAkc3RhdGUgaW4gJHN0YXRlcyB7XHJcbiAgICAgICAgJHN0YXRlQXBwbHk6ICRzdGF0ZUFwcGx5ICsgJ1tkYXRhLWVxLXN0YXRlfj1cIiN7JHN0YXRlfVwiXSc7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYjeyRzdGF0ZUFwcGx5fSB7XHJcbiAgICAgICAgQGV4dGVuZCAlI3skZXh0ZW5kfTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGVsc2Uge1xyXG4gICAgICBAZWFjaCAkc3RhdGUgaW4gJHN0YXRlcyB7XHJcbiAgICAgICAgJltkYXRhLWVxLXN0YXRlfj1cIiN7JHN0YXRlfVwiXSB7XHJcbiAgICAgICAgICBAZXh0ZW5kICUjeyRleHRlbmR9O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIEVsZW1lbnQgUXVlcnkgUG9pbnRzXHJcbi8vXHJcbi8vIFByaW50cyBlbGVtZW50IHF1ZXJ5IHBvaW50cyB0byBlbGVtZW50J3MgYDpiZWZvcmVgXHJcbi8vXHJcbi8vICRzdGF0ZXMgLSBNYXAgb2YgYG5hbWU6IHNpemVgOyBAaW5jbHVkZSBlcS1wdHMoKHNtYWxsOiA0MDAsIG1lZGl1bTogNjAwLCBsYXJnZTogOTAwKSlcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbkBtaXhpbiBlcS1wdHMoJHN0YXRlcykge1xyXG4gICY6YmVmb3JlIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBjb250ZW50OiAnI3tzdHItc2xpY2UoaW5zcGVjdCgkc3RhdGVzKSwgMiwgLTIpfSc7XHJcbiAgfVxyXG5cclxuICBAaWYgbm90IGluZGV4KCRFUS1TZWxlY3RvcnMsICcjeyZ9Jykge1xyXG4gICAgJEVRLVNlbGVjdG9yczogYXBwZW5kKCRFUS1TZWxlY3RvcnMsICcjeyZ9JywgJ2NvbW1hJykgIWdsb2JhbDtcclxuICB9XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBFbGVtZW50IFF1ZXJ5IFNlbGVjdG9yc1xyXG4vL1xyXG4vLyBQcmludHMgbGlzdCBvZiBzZWxlY3RvcnMgdGhhdCB3ZXJlIGNhbGxlZCBmb3IgQ1NTIGVsZW1lbnQgcXVlcmllcyB0byBIVE1MJ3MgYDpiZWZvcmVgXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5AbWl4aW4gZXEtc2VsZWN0b3JzIHtcclxuICBAYXQtcm9vdCB7XHJcbiAgICBodG1sOmJlZm9yZSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIGNvbnRlbnQ6ICcjeyRFUS1TZWxlY3RvcnN9JztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiJHdoaXRlOiAjZmZmZWZiO1xyXG4kYmxhY2s6ICMyYzJhMjk7XHJcbiRwcmltYXJ5OiAjZjI2MTU3OyAgIC8vU3Vuc2V0IE9yYW5nZVxyXG4kc2Vjb25kYXJ5OiAjZjFhNjZhOyAvL1NhbmR5IEJyb3duXHJcbiR0ZXJ0aWFyeTogI2Y3ZGIwYzsgIC8vU2l6emxpbmcgU3VucmlzZVxyXG4kcXVhZHJhcnk6ICMwMDMzYTA7XHJcblxyXG4vL0BpbmNsdWRlIGNzLXRlc3QoY3MtcHJpbWFyeSgpIGNzLXNlY29uZGFyeSgpIGNzLXRlcnRpYXJ5KCkgY3MtcXVhZHJhcnkoKSk7XHJcblxyXG4vL0BpbmNsdWRlIGNzLXRlc3QoJHByaW1hcnkgJHNlY29uZGFyeSAkdGVydGlhcnkgJHF1YWRyYXJ5KTtcclxuXHJcblxyXG4kcHJpbWFyeS0tc2hhZG93OiBkYXJrZW4oJHByaW1hcnksIDQpO1xyXG4kcHJpbWFyeS0tbGlnaHQ6IHRpbnQoJHByaW1hcnksIDUpO1xyXG4gIFxyXG4kc2Vjb25kYXJ5LS1zaGFkb3c6IHNoYWRlKCRzZWNvbmRhcnksIDUpO1xyXG4kc2Vjb25kYXJ5LS1saWdodDogdGludCgkc2Vjb25kYXJ5LCAxMCk7XHJcblxyXG4kdGVydGlhcnktLXNoYWRvdzogZGFya2VuKCR0ZXJ0aWFyeSwgNyk7XHJcbiR0ZXJ0aWFyeS0tbGlnaHQ6IHRpbnQoJHRlcnRpYXJ5LCAxMCk7XHJcblxyXG4kcXVhZHJhcnktLXNoYWRvdzogZGFya2VuKCRxdWFkcmFyeSwgNyk7XHJcbiRxdWFkcmFyeS0tbGlnaHQ6IHRpbnQoJHF1YWRyYXJ5LCAxMCk7XHJcblxyXG4kbGJnOiAkd2hpdGU7XHJcbiRsYmctLXNoYWRvdzogc2hhZGUoJGxiZywgNik7XHJcbiRsYmctLWxpZ2h0OiB0aW50KCRsYmcsIDEwKTtcclxuXHJcbiRkYmc6ICRibGFjaztcclxuJGRiZy0tc2hhZG93OiBkYXJrZW4oJGRiZywgMyk7XHJcbiRkYmctLWxpZ2h0OiB0aW50KCRkYmcsIDQpO1xyXG4iLCJAaW1wb3J0IFwiYnJlYWtwb2ludHNcIjtcclxuQGltcG9ydCBcImNvbG9yc1wiO1xyXG5AaW1wb3J0IFwiZXFcIjtcclxuQGltcG9ydCBcImdyaWRzXCI7XHJcbkBpbXBvcnQgXCJtb2R1bGFyU2NhbGVcIjtcclxuQGltcG9ydCBcInR5cG9ncmFwaHlcIjtcclxuXHJcbmJvZHl7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjokd2hpdGU7XHJcbiAgZm9udC1zaXplOjE2cHg7XHJcbn1cclxuc2VjdGlvbntcclxuICB3aWR0aDoxMDAlO1xyXG4gIGZsb2F0OmxlZnQ7XHJcbiAgcGFkZGluZzo2ZW0gMDtcclxufVxyXG4iLCJAbWl4aW4gYnRuKFxyXG4gICRiZ0NvbG9yOiAkbGJnLFxyXG4gICRidG5Db2xvcjogJHRlcnRpYXJ5LFxyXG4gICR0eHRDb2xvcjogJGJsYWNrLFxyXG4gICRsaWdodDogbGlnaHRlbigkYmdDb2xvciwgMTApLFxyXG4gICRzaGFkb3c6IHNoYWRlKCRiZ0NvbG9yLCAxMClcclxuKXtcclxuICAgIFxyXG4gIHBhZGRpbmc6MC42MThlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnRuQ29sb3I7XHJcbiAgY29sb3I6JHR4dENvbG9yO1xyXG4gIGJvcmRlci1yYWRpdXM6MC4zZW07XHJcbiAgZm9udC13ZWlnaHQ6Ym9sZDtcclxuICB0ZXh0LWRlY29yYXRpb246bm9uZTtcclxuICBib3JkZXI6MnB4IHNvbGlkICRidG5Db2xvcjtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6bGlnaHRlbigkYnRuQ29sb3IsIDEwKTtcclxuICAgICAgYm9yZGVyLWNvbG9yOmxpZ2h0ZW4oJGJ0bkNvbG9yLCAxMCk7XHJcbiAgICAgIGNvbG9yOmxpZ2h0ZW4oJHR4dENvbG9yLDEwKTtcclxuICAgICAgXHJcbiAgICB9Ly9lbmQgaG92ZXJcclxufS8vZW5kIG1peGluIGJ0blxyXG5cclxuXHJcblxyXG5AbWl4aW4gYnRuLS1vdXRsaW5lKFxyXG4gICRiZ0NvbG9yOiAkbGJnLFxyXG4gICRidG5Db2xvcjogJHRlcnRpYXJ5LFxyXG4gICR0eHRDb2xvcjogJGJsYWNrLFxyXG4gICRsaWdodDogbGlnaHRlbigkYmdDb2xvciwgMTApLFxyXG4gICRzaGFkb3c6IHNoYWRlKCRiZ0NvbG9yLCAxMClcclxuKXtcclxuICBAaW5jbHVkZSBidG4oJGJnQ29sb3IsICRidG5Db2xvciwgJGJ0bkNvbG9yLCAkbGlnaHQsICRzaGFkb3cpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJnQ29sb3I7XHJcbiAgICAmOmhvdmVyeyBcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjokYmdDb2xvcjtcclxuICAgIH1cclxuICB9Ly9lbmQgYnRuLS1vdXRsaW5lIG1peGluXHJcblxyXG5cclxuICBcclxuLmJ0bnsgQGluY2x1ZGUgYnRuO31cclxuLmJ0bi0tb3V0bGluZXsgQGluY2x1ZGUgYnRuLS1vdXRsaW5lO30iLCJAbWl4aW4gbmF2TGlzdChcclxuICAkYmdDb2xvcjogJGxiZyxcclxuICAkdHh0Q29sb3I6ICRibGFjayxcclxuICAkbGlnaHQ6ICRsYmctLWxpZ2h0LFxyXG4gICRzaGFkb3c6ICRsYmctLXNoYWRvd1xyXG4gICl7XHJcblxyXG5wYWRkaW5nOiAwOyBtYXJnaW46MDsgXHJcbmxpc3Qtc3R5bGU6bm9uZTsgXHJcbiAgICBcclxuICAgIGxpeyBkaXNwbGF5OmlubGluZS1ibG9jazsgXHJcbiAgICAgICAgcGFkZGluZzogMCAxZW07IG1hcmdpbjowOyBcclxuICAgICAgICBmbG9hdDpsZWZ0O1xyXG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRzaGFkb3c7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAxcHggMHggMCAkbGlnaHQ7XHJcbiAgICAgICAgJjpsYXN0LWNoaWxkeyBib3gtc2hhZG93Om5vbmU7IGJvcmRlci1yaWdodDowO30gXHJcbiAgICAgIGF7IFxyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yZW07IFxyXG4gICAgICAgIGNvbG9yOiRwcmltYXJ5OyBcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246bm9uZTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XHJcbiAgICAgICAgJjpob3Zlcntjb2xvcjpsaWdodGVuKCRwcmltYXJ5LCA2KTsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTt9XHJcbiAgICAgIH0vL2VuZCBhXHJcbiAgICB9Ly9lbmQgbGlcclxuICB9Ly9lbmQgbWl4aW4gbmF2TGlzdFxyXG5cclxuLm5hdkxpc3R7QGluY2x1ZGUgbmF2TGlzdCgpO31cclxuXHJcbiIsIi8vIEFkZCBwZXJjZW50YWdlIG9mIHdoaXRlIHRvIGEgY29sb3JcclxuQGZ1bmN0aW9uIHRpbnQoJGNvbG9yLCAkcGVyY2VudCkge1xyXG4gIEByZXR1cm4gbWl4KHdoaXRlLCAkY29sb3IsICRwZXJjZW50KTtcclxufVxyXG5cclxuLy8gQWRkIHBlcmNlbnRhZ2Ugb2YgYmxhY2sgdG8gYSBjb2xvclxyXG5AZnVuY3Rpb24gc2hhZGUoJGNvbG9yLCAkcGVyY2VudCkge1xyXG4gIEByZXR1cm4gbWl4KGJsYWNrLCAkY29sb3IsICRwZXJjZW50KTtcclxufVxyXG4iLCIuY29udGFpbmVye1xyXG4gIHdpZHRoOjg3LjY2JTtcclxuICBtYXJnaW46MCBhdXRvOyAgXHJcbn0iLCIuYi1jdGFDYXJke1xyXG4gIHdpZHRoOjEwMCU7IGZsb2F0OmxlZnQ7XHJcbn0vL2VuZCBiLWN0YUNhcmRcclxuLmItY3RhQ2FyZF9faW1nV3JhcHBlcntcclxuICB3aWR0aDoxMDAlOyBmbG9hdDpsZWZ0O1xyXG4gIHBhZGRpbmc6MDsgbWFyZ2luOjA7XHJcbiAgcG9zaXRpb246cmVsYXRpdmU7XHJcbn0vL2VuZCBiLWN0YUNhcmRfX2ltZ1dyYXBwZXJcclxuLmItY3RhQ2FyZF9faW1ne1xyXG4gIHdpZHRoOjEwMCU7IGhlaWdodDphdXRvOyBwYWRkaW5nOjA7IG1hcmdpbjowOyBmbG9hdDpsZWZ0O1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6MC4zODJlbTtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowLjM4MmVtO1xyXG59Ly9lbmQgYi1jdGFDYXJkX19pbWdcclxuLmItY3RhQ2FyZF9fY2FwdGlvbntcclxuICAvL2Rpc3BsYXk6bm9uZTtcclxuICBwb3NpdGlvbjphYnNvbHV0ZTsgYm90dG9tOjA7XHJcbiAgd2lkdGg6OTclOyBmbG9hdDpsZWZ0OyBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50aXplKCRibGFjaywgMC40KTtcclxuICBjb2xvcjokd2hpdGU7XHJcbiAgcGFkZGluZzowLjYxOGVtIDEuNSU7IG1hcmdpbjowO1xyXG4gIHB7XHJcbiAgICBjb2xvcjokd2hpdGU7XHJcbiAgICBmb250LXNpemU6MWVtO1xyXG4gICAgbGluZS1oZWlnaHQ6MS42MThlbTtcclxuICAgIHBhZGRpbmc6MDsgbWFyZ2luOjA7XHJcbiAgfVxyXG4gIFxyXG59Ly9lbmQgYi1jdGFDYXJkX19jYXB0aW9uXHJcbi5iLWN0YUNhcmRfX2N0YXtcclxuICAvL2Rpc3BsYXk6bm9uZTtcclxuICB3aWR0aDo5NyU7IGZsb2F0OmxlZnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnk7IFxyXG4gIGhlaWdodDozZW07XHJcbiAgcGFkZGluZzogMC42MThlbSAxLjUlO1xyXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MC4zODJlbTtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowLjM4MmVtO1xyXG4gIFxyXG4gIC5idG57XHJcbiAgICBAaW5jbHVkZSBidG4oJHByaW1hcnksICR3aGl0ZSwgJHByaW1hcnkpOyBcclxuICAgIGZsb2F0OmxlZnQ7XHJcbiAgfS8vZW5kIGJ0blxyXG4gIC5idG4tLWRvbmF0ZXtcclxuICAgIEBpbmNsdWRlIGJ0bi0tb3V0bGluZSgkcHJpbWFyeSwgJHdoaXRlKTtcclxuICAgIGZsb2F0OmxlZnQ7IG1hcmdpbi1sZWZ0OiAxZW07XHJcbiAgfS8vZW5kIGJ0bi0tZG9uYXRlXHJcbn0vL2VuZCBiLWN0YUNhcmRfX2N0YSIsIi5iLXByaW1hcnlOYXZ7XHJcbiAgcGFkZGluZzogMi41ZW0gMDtcclxuICAubmF2TGlzdHsgZmxvYXQ6cmlnaHQ7fVxyXG4gfSIsIi5iLXNpdGVOYW1le1xyXG4gIHdpZHRoOjUwJTsgZmxvYXQ6bGVmdDtcclxuICBAZXh0ZW5kIGgxO1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG4gIHBhZGRpbmc6MWVtIDA7XHJcbiAgbWFyZ2luOjA7XHJcbiAgQGluY2x1ZGUgYWRqdXN0LWZvbnQtc2l6ZS10bygzMHB4KTtcclxuICBAaW5jbHVkZSByaHl0aG0oMS42MTgsIDAsIDAsIDAuNjE4LCAzMHB4KTtcclxuXHJcbiAgLy9AaW5jbHVkZSBlcSh4U21hbGwpe2JvcmRlcjokc2Vjb25kYXJ5IDFweCBzb2xpZDt9XHJcbiAgLy9AaW5jbHVkZSBlcShNZWRpdW0pe2JvcmRlcjokcHJpbWFyeSAxcHggc29saWQ7fVxyXG5cclxufS8vZW5kIGItc2l0ZW5hbWVcclxuXHJcbiIsIkBpbXBvcnQgXCIuLi9sYXlvdXQvZ3JpZC1iYWNrZ3JvdW5kXCI7XHJcblxyXG4vLyBUaGUgYmFzZSBmb250IHNpemUuXHJcbiRiYXNlLWZvbnQtc2l6ZTogMTZweCAhZGVmYXVsdDtcclxuXHJcbi8vIFRoZSBiYXNlIGxpbmUgaGVpZ2h0IGRldGVybWluZXMgdGhlIGJhc2ljIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtLlxyXG4kYmFzZS1saW5lLWhlaWdodDogMjRweCAhZGVmYXVsdDtcclxuXHJcbi8vIFNldCB0aGUgZGVmYXVsdCBib3JkZXIgc3R5bGUgZm9yIHJoeXRobSBib3JkZXJzLlxyXG4kZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlOiBzb2xpZCAhZGVmYXVsdDtcclxuXHJcbi8vIFRoZSBkZWZhdWx0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiRicm93c2VyLWRlZmF1bHQtZm9udC1zaXplOiAxNnB4O1xyXG5cclxuLy8gU2V0IHRvIGZhbHNlIGlmIHlvdSB3YW50IHRvIHVzZSBhYnNvbHV0ZSBwaXhlbHMgaW4gc2l6aW5nIHlvdXIgdHlwb2dyYXBoeS5cclxuJHJlbGF0aXZlLWZvbnQtc2l6aW5nOiB0cnVlICFkZWZhdWx0O1xyXG5cclxuLy8gQWxsb3dzIHRoZSBgYWRqdXN0LWZvbnQtc2l6ZS10b2AgbWl4aW4gYW5kIHRoZSBgbGluZXMtZm9yLWZvbnQtc2l6ZWAgZnVuY3Rpb25cclxuLy8gdG8gcm91bmQgdGhlIGxpbmUgaGVpZ2h0IHRvIHRoZSBuZWFyZXN0IGhhbGYgbGluZSBoZWlnaHQgaW5zdGVhZCBvZiB0aGVcclxuLy8gbmVhcmVzdCBpbnRlZ3JhbCBsaW5lIGhlaWdodCB0byBhdm9pZCBsYXJnZSBzcGFjaW5nIGJldHdlZW4gbGluZXMuXHJcbiRyb3VuZC10by1uZWFyZXN0LWhhbGYtbGluZTogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBFbnN1cmUgdGhlcmUgaXMgYXQgbGVhc3QgdGhpcyBtYW55IHBpeGVsc1xyXG4vLyBvZiB2ZXJ0aWNhbCBwYWRkaW5nIGFib3ZlIGFuZCBiZWxvdyB0aGUgdGV4dC5cclxuJG1pbi1saW5lLXBhZGRpbmc6IDJweCAhZGVmYXVsdDtcclxuXHJcbi8vICRiYXNlLWZvbnQtc2l6ZSBidXQgaW4geW91ciBvdXRwdXQgdW5pdCBvZiBjaG9pY2UuXHJcbi8vIERlZmF1bHRzIHRvIDFlbSB3aGVuIGAkcmVsYXRpdmUtZm9udC1zaXppbmdgIGlzIHRydWUuXHJcbiRmb250LXVuaXQ6IGlmKCRyZWxhdGl2ZS1mb250LXNpemluZywgMWVtLCAkYmFzZS1mb250LXNpemUpICFkZWZhdWx0O1xyXG5cclxuLy8gVGhlIGJhc2ljIHVuaXQgb2YgZm9udCByaHl0aG0uXHJcbiRiYXNlLXJoeXRobS11bml0OiAkYmFzZS1saW5lLWhlaWdodCAvICRiYXNlLWZvbnQtc2l6ZSAqICRmb250LXVuaXQ7XHJcblxyXG4vLyBUaGUgbGVhZGVyIGlzIHRoZSBhbW91bnQgb2Ygd2hpdGVzcGFjZSBpbiBhIGxpbmUuXHJcbi8vIEl0IG1pZ2h0IGJlIHVzZWZ1bCBpbiB5b3VyIGNhbGN1bGF0aW9ucy5cclxuJGJhc2UtbGVhZGVyOiAoJGJhc2UtbGluZS1oZWlnaHQgLSAkYmFzZS1mb250LXNpemUpICogJGZvbnQtdW5pdCAvICRiYXNlLWZvbnQtc2l6ZTtcclxuXHJcbi8vIFRoZSBoYWxmLWxlYWRlciBpcyB0aGUgYW1vdW50IG9mIHdoaXRlc3BhY2UgYWJvdmUgYW5kIGJlbG93IGEgbGluZS5cclxuLy8gSXQgbWlnaHQgYmUgdXNlZnVsIGluIHlvdXIgY2FsY3VsYXRpb25zLlxyXG4kYmFzZS1oYWxmLWxlYWRlcjogJGJhc2UtbGVhZGVyIC8gMjtcclxuXHJcbi8vIFRydWUgaWYgYSBudW1iZXIgaGFzIGEgcmVsYXRpdmUgdW5pdC5cclxuQGZ1bmN0aW9uIHJlbGF0aXZlLXVuaXQoJG51bWJlcikge1xyXG4gIEByZXR1cm4gdW5pdCgkbnVtYmVyKSA9PSBcIiVcIiBvciB1bml0KCRudW1iZXIpID09IFwiZW1cIiBvciB1bml0KCRudW1iZXIpID09IFwicmVtXCJcclxufVxyXG5cclxuLy8gVHJ1ZSBpZiBhIG51bWJlciBoYXMgYW4gYWJzb2x1dGUgdW5pdC5cclxuQGZ1bmN0aW9uIGFic29sdXRlLXVuaXQoJG51bWJlcikge1xyXG4gIEByZXR1cm4gbm90KHJlbGF0aXZlLXVuaXQoJG51bWJlcikgb3IgdW5pdGxlc3MoJG51bWJlcikpO1xyXG59XHJcblxyXG5AaWYgJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGFuZCBub3QocmVsYXRpdmUtdW5pdCgkZm9udC11bml0KSkge1xyXG4gIEB3YXJuIFwiJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGlzIHRydWUgYnV0ICRmb250LXVuaXQgaXMgc2V0IHRvICN7JGZvbnQtdW5pdH0gd2hpY2ggaXMgbm90IGEgcmVsYXRpdmUgdW5pdC5cIjtcclxufVxyXG5cclxuLy8gRXN0YWJsaXNoZXMgYSBmb250IGJhc2VsaW5lIGZvciB0aGUgZ2l2ZW4gZm9udC1zaXplLlxyXG5AbWl4aW4gZXN0YWJsaXNoLWJhc2VsaW5lKCRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG4gIC8vIElFIDYgcmVmdXNlcyB0byByZXNpemUgZm9udHMgc2V0IGluIHBpeGVscyBhbmQgaXQgd2VpcmRseSByZXNpemVzIGZvbnRzXHJcbiAgLy8gd2hvc2Ugcm9vdCBpcyBzZXQgaW4gZW1zLiBTbyB3ZSBzZXQgdGhlIHJvb3QgZm9udCBzaXplIGluIHBlcmNlbnRhZ2VzIG9mXHJcbiAgLy8gdGhlIGRlZmF1bHQgZm9udCBzaXplLlxyXG4gICogaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDEwMCUgKiAoJGZvbnQtc2l6ZSAvICRicm93c2VyLWRlZmF1bHQtZm9udC1zaXplKTtcclxuICB9XHJcbiAgaHRtbCB7XHJcbiAgICBmb250LXNpemU6ICRmb250LXNpemU7XHJcbiAgICBAaW5jbHVkZSBhZGp1c3QtbGVhZGluZy10bygxLCBpZigkcmVsYXRpdmUtZm9udC1zaXppbmcsICRmb250LXNpemUsICRiYXNlLWZvbnQtc2l6ZSkpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gUmVzZXRzIHRoZSBsaW5lLWhlaWdodCB0byAxIHZlcnRpY2FsIHJoeXRobSB1bml0LlxyXG4vLyBEb2VzIG5vdCB3b3JrIG9uIGVsZW1lbnRzIHdob3NlIGZvbnQtc2l6ZSBpcyBkaWZmZXJlbnQgZnJvbSAkYmFzZS1mb250LXNpemUuXHJcbi8vXHJcbi8vIEBkZXByZWNhdGVkIFRoaXMgbWl4aW4gd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IHJlbGVhc2UuXHJcbi8vIFBsZWFzZSB1c2UgdGhlIGBhZGp1c3QtbGVhZGluZy10b2AgbWl4aW4gaW5zdGVhZC5cclxuQG1peGluIHJlc2V0LWJhc2VsaW5lIHtcclxuICBAaW5jbHVkZSBhZGp1c3QtbGVhZGluZy10bygxLCBpZigkcmVsYXRpdmUtZm9udC1zaXppbmcsICRiYXNlLWZvbnQtc2l6ZSwgJGJhc2UtZm9udC1zaXplKSk7XHJcbn1cclxuXHJcbi8vIFNob3cgYSBiYWNrZ3JvdW5kIGltYWdlIHRoYXQgY2FuIGJlIHVzZWQgdG8gZGVidWcgeW91ciBhbGlnbm1lbnRzLlxyXG4vLyBJbmNsdWRlIHRoZSAkaW1nIGFyZ3VtZW50IGlmIHlvdSB3b3VsZCByYXRoZXIgdXNlIHlvdXIgb3duIGltYWdlIHRoYW4gdGhlXHJcbi8vIENvbXBhc3MgZGVmYXVsdCBncmFkaWVudCBpbWFnZS5cclxuQG1peGluIGRlYnVnLXZlcnRpY2FsLWFsaWdubWVudCgkaW1nOiBmYWxzZSkge1xyXG4gIEBpZiAkaW1nIHtcclxuICAgIGJhY2tncm91bmQ6IGltYWdlLXVybCgkaW1nKTtcclxuICB9IEBlbHNlIHtcclxuICAgIEBpbmNsdWRlIGJhc2VsaW5lLWdyaWQtYmFja2dyb3VuZCgkYmFzZS1yaHl0aG0tdW5pdCk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBBZGp1c3QgYSBibG9jayB0byBoYXZlIGEgZGlmZmVyZW50IGZvbnQgc2l6ZSBhbmQgbGluZSBoZWlnaHQgdG8gbWFpbnRhaW4gdGhlXHJcbi8vIHJoeXRobS4gJGxpbmVzIHNwZWNpZmllcyBob3cgbWFueSBtdWx0aXBsZXMgb2YgdGhlIGJhc2VsaW5lIHJoeXRobSBlYWNoIGxpbmVcclxuLy8gb2YgdGhpcyBmb250IHNob3VsZCB1c2UgdXAuIEl0IGRvZXMgbm90IGhhdmUgdG8gYmUgYW4gaW50ZWdlciwgYnV0IGl0XHJcbi8vIGRlZmF1bHRzIHRvIHRoZSBzbWFsbGVzdCBpbnRlZ2VyIHRoYXQgaXMgbGFyZ2UgZW5vdWdoIHRvIGZpdCB0aGUgZm9udC5cclxuLy8gVXNlICRmcm9tLXNpemUgdG8gYWRqdXN0IGZyb20gYSBmb250LXNpemUgb3RoZXIgdGhhbiB0aGUgYmFzZSBmb250LXNpemUuXHJcbkBtaXhpbiBhZGp1c3QtZm9udC1zaXplLXRvKCR0by1zaXplLCAkbGluZXM6IGxpbmVzLWZvci1mb250LXNpemUoJHRvLXNpemUpLCAkZnJvbS1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcclxuICBAaWYgbm90KCRyZWxhdGl2ZS1mb250LXNpemluZykgYW5kICRmcm9tLXNpemUgIT0gJGJhc2UtZm9udC1zaXplIHtcclxuICAgIEB3YXJuIFwiJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGlzIGZhbHNlIGJ1dCBhIHJlbGF0aXZlIGZvbnQgc2l6ZSB3YXMgcGFzc2VkIHRvIGFkanVzdC1mb250LXNpemUtdG9cIjtcclxuICB9XHJcbiAgZm9udC1zaXplOiAkZm9udC11bml0ICogJHRvLXNpemUgLyAkZnJvbS1zaXplO1xyXG4gIEBpbmNsdWRlIGFkanVzdC1sZWFkaW5nLXRvKCRsaW5lcywgaWYoJHJlbGF0aXZlLWZvbnQtc2l6aW5nLCAkdG8tc2l6ZSwgJGJhc2UtZm9udC1zaXplKSk7XHJcbn1cclxuXHJcbi8vIEFkanVzdCBhIGJsb2NrIHRvIGhhdmUgZGlmZmVyZW50IGxpbmUgaGVpZ2h0IHRvIG1haW50YWluIHRoZSByaHl0aG0uXHJcbi8vICRsaW5lcyBzcGVjaWZpZXMgaG93IG1hbnkgbXVsdGlwbGVzIG9mIHRoZSBiYXNlbGluZSByaHl0aG0gZWFjaCBsaW5lIG9mIHRoaXNcclxuLy8gZm9udCBzaG91bGQgdXNlIHVwLiBJdCBkb2VzIG5vdCBoYXZlIHRvIGJlIGFuIGludGVnZXIsIGJ1dCBpdCBkZWZhdWx0cyB0byB0aGVcclxuLy8gc21hbGxlc3QgaW50ZWdlciB0aGF0IGlzIGxhcmdlIGVub3VnaCB0byBmaXQgdGhlIGZvbnQuXHJcbkBtaXhpbiBhZGp1c3QtbGVhZGluZy10bygkbGluZXMsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG4gIGxpbmUtaGVpZ2h0OiByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplKTtcclxufVxyXG5cclxuLy8gQ2FsY3VsYXRlIHJoeXRobSB1bml0cy5cclxuQGZ1bmN0aW9uIHJoeXRobShcclxuICAkbGluZXM6IDEsXHJcbiAgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLFxyXG4gICRvZmZzZXQ6IDBcclxuKSB7XHJcbiAgQGlmIG5vdCgkcmVsYXRpdmUtZm9udC1zaXppbmcpIGFuZCAkZm9udC1zaXplICE9ICRiYXNlLWZvbnQtc2l6ZSB7XHJcbiAgICBAd2FybiBcIiRyZWxhdGl2ZS1mb250LXNpemluZyBpcyBmYWxzZSBidXQgYSByZWxhdGl2ZSBmb250IHNpemUgd2FzIHBhc3NlZCB0byB0aGUgcmh5dGhtIGZ1bmN0aW9uXCI7XHJcbiAgfVxyXG4gICRyaHl0aG06ICRmb250LXVuaXQgKiAoJGxpbmVzICogJGJhc2UtbGluZS1oZWlnaHQgLSAkb2Zmc2V0KSAvICRmb250LXNpemU7XHJcbiAgLy8gUm91bmQgdGhlIHBpeGVscyBkb3duIHRvIG5lYXJlc3QgaW50ZWdlci5cclxuICBAaWYgdW5pdCgkcmh5dGhtKSA9PSBweCB7XHJcbiAgICAkcmh5dGhtOiBmbG9vcigkcmh5dGhtKTtcclxuICB9XHJcbiAgQHJldHVybiAkcmh5dGhtO1xyXG59XHJcblxyXG4vLyBDYWxjdWxhdGUgdGhlIG1pbmltdW0gbXVsdGlwbGUgb2Ygcmh5dGhtIHVuaXRzIG5lZWRlZCB0byBjb250YWluIHRoZSBmb250LXNpemUuXHJcbkBmdW5jdGlvbiBsaW5lcy1mb3ItZm9udC1zaXplKCRmb250LXNpemUpIHtcclxuICAkbGluZXM6IGlmKCRyb3VuZC10by1uZWFyZXN0LWhhbGYtbGluZSxcclxuICAgICAgICAgICAgICBjZWlsKDIgKiAkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpIC8gMixcclxuICAgICAgICAgICAgICBjZWlsKCRmb250LXNpemUgLyAkYmFzZS1saW5lLWhlaWdodCkpO1xyXG4gIEBpZiAkbGluZXMgKiAkYmFzZS1saW5lLWhlaWdodCAtICRmb250LXNpemUgPCAkbWluLWxpbmUtcGFkZGluZyAqIDIge1xyXG4gICAgJGxpbmVzOiAkbGluZXMgKyBpZigkcm91bmQtdG8tbmVhcmVzdC1oYWxmLWxpbmUsIDAuNSwgMSk7XHJcbiAgfVxyXG4gIEByZXR1cm4gJGxpbmVzO1xyXG59XHJcblxyXG4vLyBBcHBseSBsZWFkaW5nIHdoaXRlc3BhY2UuIFRoZSAkcHJvcGVydHkgY2FuIGJlIG1hcmdpbiBvciBwYWRkaW5nLlxyXG5AbWl4aW4gbGVhZGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkcHJvcGVydHk6IG1hcmdpbikge1xyXG4gICN7JHByb3BlcnR5fS10b3A6IHJoeXRobSgkbGluZXMsICRmb250LXNpemUpO1xyXG59XHJcblxyXG4vLyBBcHBseSBsZWFkaW5nIHdoaXRlc3BhY2UgYXMgcGFkZGluZy5cclxuQG1peGluIHBhZGRpbmctbGVhZGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XHJcbiAgcGFkZGluZy10b3A6IHJoeXRobSgkbGluZXMsICRmb250LXNpemUpO1xyXG59XHJcblxyXG4vLyBBcHBseSBsZWFkaW5nIHdoaXRlc3BhY2UgYXMgbWFyZ2luLlxyXG5AbWl4aW4gbWFyZ2luLWxlYWRlcigkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG4gIG1hcmdpbi10b3A6IHJoeXRobSgkbGluZXMsICRmb250LXNpemUpO1xyXG59XHJcblxyXG4vLyBBcHBseSB0cmFpbGluZyB3aGl0ZXNwYWNlLiBUaGUgJHByb3BlcnR5IGNhbiBiZSBtYXJnaW4gb3IgcGFkZGluZy5cclxuQG1peGluIHRyYWlsZXIoJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRwcm9wZXJ0eTogbWFyZ2luKSB7XHJcbiAgI3skcHJvcGVydHl9LWJvdHRvbTogcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSk7XHJcbn1cclxuXHJcbi8vIEFwcGx5IHRyYWlsaW5nIHdoaXRlc3BhY2UgYXMgcGFkZGluZy5cclxuQG1peGluIHBhZGRpbmctdHJhaWxlcigkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG4gIHBhZGRpbmctYm90dG9tOiByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplKTtcclxufVxyXG5cclxuLy8gQXBwbHkgdHJhaWxpbmcgd2hpdGVzcGFjZSBhcyBtYXJnaW4uXHJcbkBtaXhpbiBtYXJnaW4tdHJhaWxlcigkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG4gIG1hcmdpbi1ib3R0b206IHJoeXRobSgkbGluZXMsICRmb250LXNpemUpO1xyXG59XHJcblxyXG4vLyBTaG9ydGhhbmQgbWl4aW4gdG8gYXBwbHkgd2hpdGVzcGFjZSBmb3IgdG9wIGFuZCBib3R0b20gbWFyZ2lucyBhbmQgcGFkZGluZy5cclxuQG1peGluIHJoeXRobSgkbGVhZGVyOiAwLCAkcGFkZGluZy1sZWFkZXI6IDAsICRwYWRkaW5nLXRyYWlsZXI6IDAsICR0cmFpbGVyOiAwLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcclxuICBAaW5jbHVkZSBsZWFkZXIoJGxlYWRlciwgJGZvbnQtc2l6ZSk7XHJcbiAgQGluY2x1ZGUgcGFkZGluZy1sZWFkZXIoJHBhZGRpbmctbGVhZGVyLCAkZm9udC1zaXplKTtcclxuICBAaW5jbHVkZSBwYWRkaW5nLXRyYWlsZXIoJHBhZGRpbmctdHJhaWxlciwgJGZvbnQtc2l6ZSk7XHJcbiAgQGluY2x1ZGUgdHJhaWxlcigkdHJhaWxlciwgJGZvbnQtc2l6ZSk7XHJcbn1cclxuXHJcbi8vIEFwcGx5IGEgYm9yZGVyIGFuZCB3aGl0ZXNwYWNlIHRvIGFueSBzaWRlIHdpdGhvdXQgZGVzdHJveWluZyB0aGUgdmVydGljYWxcclxuLy8gcmh5dGhtLiBUaGUgd2hpdGVzcGFjZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB0aGUgd2lkdGggb2YgdGhlIGJvcmRlci5cclxuQG1peGluIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlcigkc2lkZSwgJHdpZHRoOiAxcHgsICRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlKSB7XHJcbiAgQGlmIG5vdCgkcmVsYXRpdmUtZm9udC1zaXppbmcpIGFuZCAkZm9udC1zaXplICE9ICRiYXNlLWZvbnQtc2l6ZSB7XHJcbiAgICBAd2FybiBcIiRyZWxhdGl2ZS1mb250LXNpemluZyBpcyBmYWxzZSBidXQgYSByZWxhdGl2ZSBmb250IHNpemUgd2FzIHBhc3NlZCB0byBhcHBseS1zaWRlLXJoeXRobS1ib3JkZXJcIjtcclxuICB9XHJcbiAgYm9yZGVyLSN7JHNpZGV9OiB7XHJcbiAgICBzdHlsZTogJGJvcmRlci1zdHlsZTtcclxuICAgIHdpZHRoOiAkZm9udC11bml0ICogJHdpZHRoIC8gJGZvbnQtc2l6ZTtcclxuICB9O1xyXG4gIHBhZGRpbmctI3skc2lkZX06IHJoeXRobSgkbGluZXMsICRmb250LXNpemUsICRvZmZzZXQ6ICR3aWR0aCk7XHJcbn1cclxuXHJcbi8vIEFwcGx5IGJvcmRlcnMgYW5kIHdoaXRlc3BhY2UgZXF1YWxseSB0byBhbGwgc2lkZXMuXHJcbkBtaXhpbiByaHl0aG0tYm9yZGVycygkd2lkdGg6IDFweCwgJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRib3JkZXItc3R5bGU6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGUpIHtcclxuICBAaWYgbm90KCRyZWxhdGl2ZS1mb250LXNpemluZykgYW5kICRmb250LXNpemUgIT0gJGJhc2UtZm9udC1zaXplIHtcclxuICAgIEB3YXJuIFwiJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGlzIGZhbHNlIGJ1dCBhIHJlbGF0aXZlIGZvbnQgc2l6ZSB3YXMgcGFzc2VkIHRvIHJoeXRobS1ib3JkZXJzXCI7XHJcbiAgfVxyXG4gIGJvcmRlcjoge1xyXG4gICAgc3R5bGU6ICRib3JkZXItc3R5bGU7XHJcbiAgICB3aWR0aDogJGZvbnQtdW5pdCAqICR3aWR0aCAvICRmb250LXNpemU7XHJcbiAgfTtcclxuICBwYWRkaW5nOiByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplLCAkb2Zmc2V0OiAkd2lkdGgpO1xyXG59XHJcblxyXG4vLyBBcHBseSBhIGxlYWRpbmcgYm9yZGVyLlxyXG5AbWl4aW4gbGVhZGluZy1ib3JkZXIoJHdpZHRoOiAxcHgsICRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlKSB7XHJcbiAgQGluY2x1ZGUgYXBwbHktc2lkZS1yaHl0aG0tYm9yZGVyKHRvcCwgJHdpZHRoLCAkbGluZXMsICRmb250LXNpemUsICRib3JkZXItc3R5bGUpO1xyXG59XHJcblxyXG4vLyBBcHBseSBhIHRyYWlsaW5nIGJvcmRlci5cclxuQG1peGluIHRyYWlsaW5nLWJvcmRlcigkd2lkdGg6IDFweCwgJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRib3JkZXItc3R5bGU6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGUpIHtcclxuICBAaW5jbHVkZSBhcHBseS1zaWRlLXJoeXRobS1ib3JkZXIoYm90dG9tLCAkd2lkdGgsICRsaW5lcywgJGZvbnQtc2l6ZSwgJGJvcmRlci1zdHlsZSk7XHJcbn1cclxuXHJcbi8vIEFwcGx5IGJvdGggbGVhZGluZyBhbmQgdHJhaWxpbmcgYm9yZGVycy5cclxuQG1peGluIGhvcml6b250YWwtYm9yZGVycygkd2lkdGg6IDFweCwgJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRib3JkZXItc3R5bGU6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGUpIHtcclxuICBAaW5jbHVkZSBsZWFkaW5nLWJvcmRlcigkd2lkdGgsICRsaW5lcywgJGZvbnQtc2l6ZSwgJGJvcmRlci1zdHlsZSk7XHJcbiAgQGluY2x1ZGUgdHJhaWxpbmctYm9yZGVyKCR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcclxufVxyXG5cclxuLy8gQWxpYXMgZm9yIGBob3Jpem9udGFsLWJvcmRlcnNgIG1peGluLlxyXG5AbWl4aW4gaC1ib3JkZXJzKCR3aWR0aDogMXB4LCAkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSwgJGJvcmRlci1zdHlsZTogJGRlZmF1bHQtcmh5dGhtLWJvcmRlci1zdHlsZSkge1xyXG4gIEBpbmNsdWRlIGhvcml6b250YWwtYm9yZGVycygkd2lkdGgsICRsaW5lcywgJGZvbnQtc2l6ZSwgJGJvcmRlci1zdHlsZSk7XHJcbn1cclxuIiwiLm0tbmF2YmFye1xyXG4gIHdpZHRoOjEwMCU7IGZsb2F0OmxlZnQ7XHJcbiAgQGluY2x1ZGUgcmh5dGhtKDAsICRtcy0xLCAkbXMtMSwgMCwgJGZvbnQtc2l6ZS1tZWQpO1xyXG4gIC8vcG9zaXRpb246Zml4ZWQ7IHRvcDowO1xyXG4gIC5iLXNpdGVOYW1leyBmbG9hdDpsZWZ0OyB9XHJcbiAgLmItcHJpbWFyeU5hdnsgZmxvYXQ6cmlnaHQ7IH1cclxufS8vZW5kIG0tbmF2YmFyXHJcblxyXG4iLCIucy1vcGVuZXJ7XHJcbiAgd2lkdGg6MTAwJTtcclxuICBmbG9hdDpsZWZ0O1xyXG4gIHBhZGRpbmc6IDNlbSAwOyAgXHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAkcHJpbWFyeSwgbWl4KCRwcmltYXJ5LCAkc2Vjb25kYXJ5LCA2MCUpKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IDQwMCUgNDAwJTtcclxuICBhbmltYXRpb246IG9wZW4gNDBzIGVhc2UgaW5maW5pdGU7XHJcbiAgQGtleWZyYW1lcyBvcGVuIHsgXHJcbiAgICAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAlIDUxJX1cclxuICAgIDUwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjEwMCUgNTAlfVxyXG4gICAgMTAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAlIDUxJX1cclxuICB9Ly9lbmQga2V5ZnJhbWVzXHJcbn0vL2VuZCBzLW9wZW5lclxyXG4ucy1vcGVuZXJfX2tpY2tlcntcclxuICB3aWR0aDo0OCU7XHJcbiAgZmxvYXQ6bGVmdDtcclxuICBtYXJnaW4tcmlnaHQ6MiU7ICBcclxuICBoMXtcclxuICAgIGNvbG9yOiR3aGl0ZTtcclxuICAgIGZvbnQtc2l6ZTogMy4yNzJlbTtcclxuICB9XHJcbn0vL2VuZCBzLW9wZW5lcl9fa2lja2VyXHJcbi5zLW9wZW5lcl9fY3Rhe1xyXG4gIHdpZHRoOjQ4JTtcclxuICBmbG9hdDpsZWZ0O1xyXG4gIG1hcmdpbi1sZWZ0OjIlO1xyXG59Ly9lbmQgcy1vcGVuZXJfX2N0YVxyXG5cclxuQGluY2x1ZGUgYnJlYWtwb2ludCgkYnAtbW9iaWxlMS0xICRicC1kZXNrdG9wMS0xKXtcclxuICAucy1vcGVuZXJfX2tpY2tlcnsgXHJcbiAgICB3aWR0aDoxMDAlOyBmbG9hdDpsZWZ0OyBcclxuICAgIG1hcmdpbjowO1xyXG4gICAgQGluY2x1ZGUgcmh5dGhtKDAuNjE4LCAwLCAwLCAwLjYxOCwgMTZweCk7XHJcbiAgfS8vZW5kIHMtb3BlbmVyX19raWNrZXJcclxuICAucy1vcGVuZXJfX2N0YXtcclxuICAgIHdpZHRoOjEwMCU7IGZsb2F0OmxlZnQ7XHJcbiAgICBtYXJnaW46MDtcclxuICAgIEBpbmNsdWRlIHJoeXRobSgwLjYxOCwgMCwgMCwgMC42MTgsIDE2cHgpO1xyXG4gIH0vL2VuZCBzLW9wZW5lcl9fY3RhXHJcbn0vL2VuZCBtb2JpbGUgdG8gdGFibGV0IGJwXHJcblxyXG4iLCIvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gRGVmYXVsdCBWYXJpYWJsZXNcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiRCcmVha3BvaW50LVNldHRpbmdzOiAoXHJcbiAgJ2RlZmF1bHQgbWVkaWEnOiBhbGwsXHJcbiAgJ2RlZmF1bHQgZmVhdHVyZSc6IG1pbi13aWR0aCxcclxuICAnZGVmYXVsdCBwYWlyJzogd2lkdGgsXHJcblxyXG4gICdmb3JjZSBhbGwgbWVkaWEgdHlwZSc6IGZhbHNlLFxyXG4gICd0byBlbXMnOiBmYWxzZSxcclxuICAndHJhbnNmb3JtIHJlc29sdXRpb25zJzogdHJ1ZSxcclxuXHJcbiAgJ25vIHF1ZXJpZXMnOiBmYWxzZSxcclxuICAnbm8gcXVlcnkgZmFsbGJhY2tzJzogZmFsc2UsXHJcblxyXG4gICdiYXNlIGZvbnQgc2l6ZSc6IDE2cHgsXHJcblxyXG4gICdsZWdhY3kgc3ludGF4JzogZmFsc2VcclxuKTtcclxuXHJcbiRicmVha3BvaW50OiAoKSAhZGVmYXVsdDtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBJbXBvcnRzXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9zZXR0aW5nc1wiO1xyXG5AaW1wb3J0ICdicmVha3BvaW50L2NvbnRleHQnO1xyXG5AaW1wb3J0ICdicmVha3BvaW50L2hlbHBlcnMnO1xyXG5AaW1wb3J0ICdicmVha3BvaW50L3BhcnNlcnMnO1xyXG5AaW1wb3J0ICdicmVha3BvaW50L25vLXF1ZXJ5JztcclxuXHJcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcmVzcG9uZC10byc7XHJcblxyXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9sZWdhY3ktc2V0dGluZ3NcIjtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBCcmVha3BvaW50IE1peGluXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuQG1peGluIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XHJcbiAgQGluY2x1ZGUgbGVnYWN5LXNldHRpbmdzLXdhcm5pbmc7XHJcblxyXG4gIC8vIFJlc2V0IGNvbnRleHRzXHJcbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XHJcblxyXG4gICRicmVha3BvaW50OiBicmVha3BvaW50KCRxdWVyeSwgZmFsc2UpO1xyXG5cclxuICAkcXVlcnktc3RyaW5nOiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnknKTtcclxuICAkcXVlcnktZmFsbGJhY2s6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdmYWxsYmFjaycpO1xyXG5cclxuICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnY29udGV4dCBob2xkZXInKSAhZ2xvYmFsO1xyXG4gICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeSBjb3VudCcpICFnbG9iYWw7XHJcblxyXG4gIC8vIEFsbG93IGZvciBhbiBhcy1uZWVkZWQgb3ZlcnJpZGUgb3IgdXNhZ2Ugb2Ygbm8gcXVlcnkgZmFsbGJhY2suXHJcbiAgQGlmICRuby1xdWVyeSAhPSBmYWxzZSB7XHJcbiAgICAkcXVlcnktZmFsbGJhY2s6ICRuby1xdWVyeTtcclxuICB9XHJcblxyXG4gIEBpZiAkcXVlcnktZmFsbGJhY2sgIT0gZmFsc2Uge1xyXG4gICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQoJ25vLXF1ZXJ5JywgJHF1ZXJ5LWZhbGxiYWNrKTtcclxuICB9XHJcblxyXG4gIC8vIFByaW50IE91dCBRdWVyeSBTdHJpbmdcclxuICBAaWYgbm90IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyaWVzJykge1xyXG4gICAgQG1lZGlhICN7JHF1ZXJ5LXN0cmluZ30ge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBpZiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykgIT0gZmFsc2Ugb3IgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSA9PSB0cnVlIHtcclxuXHJcbiAgICAkdHlwZTogdHlwZS1vZihicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykpO1xyXG4gICAgJHByaW50OiBmYWxzZTtcclxuXHJcbiAgICBAaWYgKCR0eXBlID09ICdib29sJykge1xyXG4gICAgICAkcHJpbnQ6IHRydWU7XHJcbiAgICB9XHJcbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ3N0cmluZycpIHtcclxuICAgICAgQGlmICRxdWVyeS1mYWxsYmFjayA9PSBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xyXG4gICAgICAgICRwcmludDogdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGVsc2UgaWYgKCR0eXBlID09ICdsaXN0Jykge1xyXG4gICAgICBAZWFjaCAkd3JhcHBlciBpbiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xyXG4gICAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gJHdyYXBwZXIge1xyXG4gICAgICAgICAgJHByaW50OiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFdyaXRlIEZhbGxiYWNrXHJcbiAgICBAaWYgKCRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSkgYW5kICgkcHJpbnQgPT0gdHJ1ZSkge1xyXG4gICAgICAkdHlwZS1mYWxsYmFjazogdHlwZS1vZigkcXVlcnktZmFsbGJhY2spO1xyXG5cclxuICAgICAgQGlmICgkdHlwZS1mYWxsYmFjayAhPSAnYm9vbCcpIHtcclxuICAgICAgICAjeyRxdWVyeS1mYWxsYmFja30gJiB7XHJcbiAgICAgICAgICBAY29udGVudDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgQGVsc2Uge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcclxufVxyXG5cclxuXHJcbkBtaXhpbiBtcSgkcXVlcnksICRuby1xdWVyeTogZmFsc2UpIHtcclxuICBAaW5jbHVkZSBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuIiwiLnMtaGVhZGVye1xyXG5cclxuXHJcbkBpbmNsdWRlIGJyZWFrcG9pbnQoJGJwLW1vYmlsZTEtMSwgJGJwLXRhYmxldC0xKXtcclxuICAuYi1zaXRlTmFtZXsgZmxvYXQ6bm9uZTsgd2lkdGg6MTAwJTsgbWFyZ2luOjAgYXV0bzsgcGFkZGluZzptcygwKSAwOyB9XHJcbiAgLmItcHJpbWFyeU5hdnsgZmxvYXQ6bm9uZTsgd2lkdGg6MTAwJTsgbWFyZ2luOjAgYXV0bzsgcGFkZGluZzptcygwKSAwOyB9XHJcbn1cclxuQGluY2x1ZGUgYnJlYWtwb2ludCgkYnAtdGFibGV0LTEsICRicC1kZXNrdG9wMS0xKXtcclxuICBAaW5jbHVkZSBncmlkLXRhYmxldDtcclxuICAuYi1zaXRlTmFtZXsgcGFkZGluZzowOyAgQGluY2x1ZGUgZ3JpZC1zcGFuKDMsMSk7IH1cclxuICAuYi1wcmltYXJ5TmF2eyBwYWRkaW5nOjA7IEBpbmNsdWRlIGdyaWQtc3Bhbig1LDQpO31cclxufVxyXG5AaW5jbHVkZSBicmVha3BvaW50KCRicC1kZXNrdG9wMS0xLCAkYnAtZGVza3RvcDItMSl7XHJcbiAgQGluY2x1ZGUgZ3JpZC1kZXNrdG9wMTtcclxuICAuYi1zaXRlTmFtZXsgcGFkZGluZzowOyAgQGluY2x1ZGUgZ3JpZC1zcGFuKDMsMSk7IH1cclxuICAuYi1wcmltYXJ5TmF2eyBwYWRkaW5nOjA7IEBpbmNsdWRlIGdyaWQtc3Bhbig5LDQpO31cclxufVxyXG5AaW5jbHVkZSBicmVha3BvaW50KCRicC1kZXNrdG9wMi0xKXtcclxuICBAaW5jbHVkZSBncmlkLWRlc2t0b3AyO1xyXG4gIC5iLXNpdGVOYW1leyBwYWRkaW5nOjA7ICBAaW5jbHVkZSBncmlkLXNwYW4oNCwxKTsgfVxyXG4gIC5iLXByaW1hcnlOYXZ7IHBhZGRpbmc6MDsgQGluY2x1ZGUgZ3JpZC1zcGFuKDEyLDUpO31cclxufVxyXG5cclxufS8vZW5kIHMtaGVhZGVyIiwiQGltcG9ydCBcImFwaS9mbG9hdFwiO1xyXG5AaW1wb3J0IFwiYXBpL2lzb2xhdGlvblwiO1xyXG5AaW1wb3J0IFwiYXBpL2NhbGNcIjtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBNYXN0ZXIgR3JpZCBTcGFuIG1peGluXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5AbWl4aW4gZ3JpZC1zcGFuKCRzcGFuLCAkbG9jYXRpb246IDEsICRncmlkOiBudWxsLCAkZ3V0dGVyOiBudWxsLCAkb3V0cHV0LXN0eWxlOiBudWxsLCAkZ3V0dGVyLXN0eWxlOiBudWxsLCAkb3B0aW9uczogbnVsbCkge1xyXG5cclxuICBAaWYgJG91dHB1dC1zdHlsZSA9PSBudWxsIHtcclxuICAgICRvdXRwdXQtc3R5bGU6IHNncy1nZXQoJ291dHB1dCcpO1xyXG4gIH1cclxuXHJcbiAgJEdyaWQ6IGZpbmQtZ3JpZCgkZ3JpZCk7XHJcbiAgJEd1dHRlcjogZmluZC1ndXR0ZXIoJGd1dHRlcik7XHJcbiAgJFN0eWxlOiBmaW5kLWd1dHRlci1zdHlsZSgkZ3V0dGVyLXN0eWxlKTtcclxuXHJcbiAgJFN0YXJ0LVJvdzogc3RhcnQtcm93KCRsb2NhdGlvbik7XHJcbiAgJEVuZC1Sb3c6IGVuZC1yb3coJHNwYW4sICRsb2NhdGlvbiwgJEdyaWQpO1xyXG5cclxuICAkRml4ZWQtR3V0dGVyOiBmaXhlZC1ndXR0ZXIoJEdyaWQsICRHdXR0ZXIsICRTdHlsZSk7XHJcbiAgJFNwbGl0LUd1dHRlcjogaW5kZXgoJFN0eWxlLCAnc3BsaXQnKTtcclxuICAkR3V0dGVyLVByb3BlcnR5OiBndXR0ZXItcHJvcGVydHkoJEdyaWQsICRHdXR0ZXIsICRTdHlsZSk7XHJcblxyXG4gICREaXJlY3Rpb246IHNncy1nZXQoJ2RpcmVjdGlvbicpO1xyXG4gICRGcm9tOiBpZigkb3B0aW9ucyBhbmQgdHlwZS1vZigkb3B0aW9ucykgPT0gJ21hcCcsIGlmKG1hcC1nZXQoJG9wdGlvbnMsICdmcm9tJyksIG1hcC1nZXQoJG9wdGlvbnMsICdmcm9tJyksICREaXJlY3Rpb24pLCAkRGlyZWN0aW9uKTtcclxuICAkRnJvbTogaWYoJEZyb20gPT0gJ2x0cicgb3IgJEZyb20gPT0gJ3J0bCcsIG5hbWVkLWRpcmVjdGlvbigkRnJvbSksICRGcm9tKTtcclxuXHJcbiAgJEhvbGRlcjogKCk7XHJcbiAgQGVhY2ggJGssICR2IGluICRvcHRpb25zIHtcclxuICAgICRIb2xkZXI6IGlmKCRrID09ICdmcm9tJywgJEhvbGRlciwgbWFwLW1lcmdlKCRIb2xkZXIsICgkazogJHYpKSk7XHJcbiAgfVxyXG4gICRvcHRpb25zOiBpZihsZW5ndGgoJEhvbGRlcikgPiAwLCAkSG9sZGVyLCBudWxsKTtcclxuXHJcbiAgJFNwYW4tTWFwOiAoXHJcbiAgICAnc3Bhbic6ICRzcGFuLFxyXG4gICAgJ2xvY2F0aW9uJzogJGxvY2F0aW9uLFxyXG4gICAgJ2dyaWQnOiAkR3JpZCxcclxuICAgICdndXR0ZXInOiAkR3V0dGVyLFxyXG4gICAgJ3N0eWxlJzogJFN0eWxlLFxyXG4gICAgJ3N0YXJ0IHJvdyc6ICRTdGFydC1Sb3csXHJcbiAgICAnZW5kIHJvdyc6ICRFbmQtUm93LFxyXG4gICAgJ2ZpeGVkIGd1dHRlcic6ICRGaXhlZC1HdXR0ZXIsXHJcbiAgICAnc3BsaXQgZ3V0dGVyJzogJFNwbGl0LUd1dHRlcixcclxuICAgICdndXR0ZXIgcHJvcGVydHknOiAkR3V0dGVyLVByb3BlcnR5LFxyXG4gICAgJ29wdGlvbnMnOiAkb3B0aW9uc1xyXG4gICk7XHJcblxyXG4gIEBpZiBzZ3MtZ2V0KCdkZWJ1ZycpICE9IGZhbHNlIHtcclxuICAgIC1zZ3Mtc3Bhbi1zZXR0aW5nczogaW5zcGVjdCgkU3Bhbi1NYXApO1xyXG4gIH1cclxuXHJcblxyXG4gIEBpZiBmdW5jdGlvbi1leGlzdHMoJ291dHB1dC0jeyRvdXRwdXQtc3R5bGV9Jykge1xyXG4gICAgJExlZnQ6ICgpO1xyXG4gICAgJFJpZ2h0OiAoKTtcclxuXHJcbiAgICBAaWYgJERpcmVjdGlvbiA9PSAnYm90aCcgb3IgJEZyb20gPT0gJ2xlZnQnIG9yICgkRGlyZWN0aW9uID09ICdydGwnIGFuZCAkRnJvbSA9PSAnb3Bwb3NpdGUnKSB7XHJcbiAgICAgICRMZWZ0OiBjYWxsKCdvdXRwdXQtI3skb3V0cHV0LXN0eWxlfScsIG1hcC1tZXJnZSgkU3Bhbi1NYXAsICgnZGlyZWN0aW9uJzogbGVmdCkpKTtcclxuICAgIH1cclxuXHJcbiAgICBAaWYgJERpcmVjdGlvbiA9PSAnYm90aCcgb3IgJEZyb20gPT0gJ3JpZ2h0JyBvciAoJERpcmVjdGlvbiA9PSAnbHRyJyBhbmQgJEZyb20gPT0gJ29wcG9zaXRlJykge1xyXG4gICAgICAkUmlnaHQ6IGNhbGwoJ291dHB1dC0jeyRvdXRwdXQtc3R5bGV9JywgbWFwLW1lcmdlKCRTcGFuLU1hcCwgKCdkaXJlY3Rpb24nOiByaWdodCkpKTtcclxuICAgIH1cclxuXHJcbiAgICAkTGVmdC1LZXlzOiBtYXAta2V5cygkTGVmdCk7XHJcbiAgICAkUmlnaHQtS2V5czogbWFwLWtleXMoJFJpZ2h0KTtcclxuICAgICRFeGNsdWRlOiAoKTtcclxuXHJcbiAgICBAZWFjaCAka2V5IGluICRMZWZ0LUtleXMge1xyXG4gICAgICBAaWYgaW5kZXgoJFJpZ2h0LUtleXMsICRrZXkpIHtcclxuICAgICAgICBAaWYgbWFwLWdldCgkUmlnaHQsICRrZXkpID09IG1hcC1nZXQoJExlZnQsICRrZXkpIHtcclxuICAgICAgICAgICRFeGNsdWRlOiBhcHBlbmQoJEV4Y2x1ZGUsICRrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEFsd2F5cyB0cnkgYW5kIHByaW50IHRoZSBMZWZ0IHZhbHVlXHJcbiAgICBAaW5jbHVkZSBncmlkLXNwYW4tYnVpbGQtZXhjbHVkZSgkTGVmdCwgJEV4Y2x1ZGUsIGZhbHNlKTtcclxuXHJcbiAgICAvLyBJZiBEaXJlY3Rpb24gaXMgQm90aCBvciBSVEwsIGFkZCB0aGUgUlRMIGF0dHJpYnV0ZSBzZWxlY3RvclxyXG4gICAgQGlmICREaXJlY3Rpb24gPT0gJ2JvdGgnIG9yICREaXJlY3Rpb24gPT0gJ3J0bCcge1xyXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xyXG4gICAgICAgIEBpbmNsdWRlIGdyaWQtc3Bhbi1idWlsZC1leGNsdWRlKCRSaWdodCwgJEV4Y2x1ZGUsIHRydWUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBAZWxzZSB7XHJcbiAgICAgIEBpbmNsdWRlIGdyaWQtc3Bhbi1idWlsZC1leGNsdWRlKCRSaWdodCwgJEV4Y2x1ZGUsIHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuICBAZWxzZSB7XHJcbiAgICBAd2FybiBcIlRoZXJlIGRvZXNuJ3QgYXBwZWFyIHRvIGJlIGFuIG91dHB1dCBzdHlsZSBuYW1lZCBgI3skb3V0cHV0LXN0eWxlfWAuIFBsZWFzZSBlbnN1cmUgdGhhdCB0aGUgZnVuY3Rpb24gYG91dHB1dC0jeyRvdXRwdXQtc3R5bGV9YCBhbmQgdGhhdCB0aGUgb3V0cHV0IHN0eWxlIGAjeyRvdXRwdXQtc3R5bGV9YCBhcmUgYm90aCBhdmFpbGFibGUgYmVmb3JlIHRyeWluZyB0byB1c2UgdGhlbS5cIjtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBncmlkLXNwYW4tYnVpbGQoJHByb3BlcnR5LCAkdmFsdWUpIHtcclxuICBAaWYgdHlwZS1vZigkdmFsdWUpICE9ICdtYXAnIHtcclxuICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xyXG4gIH1cclxuICBAZWxzZSB7XHJcbiAgICBAZWFjaCAkcHJlZml4LCAkdmFsIGluICR2YWx1ZSB7XHJcbiAgICAgICN7JHByb3BlcnR5fTogJHZhbDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBncmlkLXNwYW4tYnVpbGQtZXhjbHVkZSgkcHJvcGVydGllcywgJGRlbHRhLCAkZXhjbHVkZTogZmFsc2UpIHtcclxuICBAZWFjaCAkcHJvcGVydHksICR2YWx1ZSBpbiAkcHJvcGVydGllcyB7XHJcbiAgICBAaWYgJGV4Y2x1ZGUge1xyXG4gICAgICBAaWYgbm90IGluZGV4KCRkZWx0YSwgJHByb3BlcnR5KSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZ3JpZC1zcGFuLWJ1aWxkKCRwcm9wZXJ0eSwgJHZhbHVlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGVsc2Uge1xyXG4gICAgICBAaW5jbHVkZSBncmlkLXNwYW4tYnVpbGQoJHByb3BlcnR5LCAkdmFsdWUpO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIkBmdW5jdGlvbiBvdXRwdXQtaXNvbGF0aW9uKCRTcGFuLU1hcCkge1xyXG4gIC8vIFNldCB1cCBMZWZ0L1JpZ2h0IG1hcHNcclxuICAkUmV0dXJuOiAoKTtcclxuXHJcbiAgJFNwYW46IG1hcC1nZXQoJFNwYW4tTWFwLCAnc3BhbicpO1xyXG4gICRMb2NhdGlvbjogbWFwLWdldCgkU3Bhbi1NYXAsICdsb2NhdGlvbicpO1xyXG5cclxuICAkR3JpZDogbWFwLWdldCgkU3Bhbi1NYXAsICdncmlkJyk7XHJcbiAgJEd1dHRlcjogbWFwLWdldCgkU3Bhbi1NYXAsICdndXR0ZXInKTtcclxuICAkU3R5bGU6IG1hcC1nZXQoJFNwYW4tTWFwLCAnc3R5bGUnKTtcclxuXHJcbiAgJFN0YXJ0LVJvdzogbWFwLWdldCgkU3Bhbi1NYXAsICdzdGFydCByb3cnKTtcclxuICAkRW5kLVJvdzogbWFwLWdldCgkU3Bhbi1NYXAsICdlbmQgcm93Jyk7XHJcblxyXG4gICRGaXhlZC1HdXR0ZXI6IG1hcC1nZXQoJFNwYW4tTWFwLCAnZml4ZWQgZ3V0dGVyJyk7XHJcbiAgJFNwbGl0LUd1dHRlcjogbWFwLWdldCgkU3Bhbi1NYXAsICdzcGxpdCBndXR0ZXInKTtcclxuICAkR3V0dGVyLVByb3BlcnR5OiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ2d1dHRlciBwcm9wZXJ0eScpO1xyXG5cclxuICAkRGlyZWN0aW9uOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ2RpcmVjdGlvbicpO1xyXG4gICRPcHRpb25zOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ29wdGlvbnMnKTtcclxuXHJcbiAgJFdpZHRoOiBjb2x1bW4tc3BhbigkU3BhbiwgJExvY2F0aW9uLCAkR3JpZCwgJEd1dHRlciwgJFN0eWxlKTtcclxuICAkTWFyZ2luLVNwYW46IGNvbHVtbi1zcGFuKCgkTG9jYXRpb24gLSAxKSwgMSwgJEdyaWQsICRHdXR0ZXIsICRTdHlsZSk7XHJcbiAgJEd1dHRlci1TcGFuOiBndXR0ZXItc3BhbigkR3V0dGVyLCAkR3JpZCk7XHJcblxyXG4gIC8vIEJhY2t3YXJkcyBDb21wYXRpYmlsaXR5IGZvciBPcHRpb25zXHJcbiAgQGlmIHR5cGUtb2YoJE9wdGlvbnMpICE9ICdtYXAnIGFuZCAkT3B0aW9ucyAhPSBudWxsIHtcclxuICAgICRPcHRpb25zOiAoJ2NsZWFyJzogdW5xdW90ZShudGgoJE9wdGlvbnMsIDEpKSk7XHJcbiAgfVxyXG5cclxuICAkRGlyOiAkRGlyZWN0aW9uO1xyXG4gICRPcHA6IG9wcG9zaXRlLWRpcmVjdGlvbigkRGlyKTtcclxuXHJcbiAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnd2lkdGgnOiAkV2lkdGgpKTtcclxuXHJcbiAgQGlmICgkRW5kLVJvdykge1xyXG4gICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnZmxvYXQnOiAkT3BwKSk7XHJcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdtYXJnaW4tI3skRGlyfSc6IDApKTtcclxuXHJcbiAgICBAaWYgJFNwbGl0LUd1dHRlciBhbmQgbm90ICRGaXhlZC1HdXR0ZXIge1xyXG4gICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCcjeyRHdXR0ZXItUHJvcGVydHl9LSN7JE9wcH0nOiAkR3V0dGVyLVNwYW4gLyAyKSk7XHJcbiAgICB9XHJcbiAgICBAZWxzZSB7XHJcbiAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyRPcHB9JzogMCkpO1xyXG4gICAgfVxyXG4gIH1cclxuICBAZWxzZSB7XHJcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdmbG9hdCc6ICREaXIpKTtcclxuICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyRPcHB9JzogLTEwMCUpKTtcclxuXHJcbiAgICBAaWYgJFN0YXJ0LVJvdyB7XHJcbiAgICAgIEBpZiAkU3BsaXQtR3V0dGVyIGFuZCBub3QgJEZpeGVkLUd1dHRlciB7XHJcbiAgICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnbWFyZ2luLSN7JERpcn0nOiAkR3V0dGVyLVNwYW4gLyAyKSk7XHJcbiAgICAgIH1cclxuICAgICAgQGVsc2UgaWYgbm90ICRGaXhlZC1HdXR0ZXIge1xyXG4gICAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyREaXJ9JzogMCkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBAZWxzZSB7XHJcbiAgICAgIEBpZiAkU3BsaXQtR3V0dGVyIGFuZCBub3QgJEZpeGVkLUd1dHRlciB7XHJcbiAgICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnbWFyZ2luLSN7JERpcn0nOiAkTWFyZ2luLVNwYW4gKyAkR3V0dGVyLVNwYW4gKyAkR3V0dGVyLVNwYW4gLyAyKSk7XHJcbiAgICAgIH1cclxuICAgICAgQGVsc2UgaWYgbm90ICRGaXhlZC1HdXR0ZXIge1xyXG4gICAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyREaXJ9JzogJE1hcmdpbi1TcGFuICsgJEd1dHRlci1TcGFuKSk7XHJcbiAgICAgIH1cclxuICAgICAgQGVsc2Uge1xyXG4gICAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyREaXJ9JzogJE1hcmdpbi1TcGFuKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLy8gSWYgb3B0aW9ucyBhcmUgc2V0LCB3ZSBtZXJnZSB0aGVtIGluIVxyXG4gIEBpZiAoJE9wdGlvbnMpIHtcclxuICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAkT3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvLyBJZiBDTGVhciBpc24ndCBhbHJlYWR5IGF2YWlsYWJsZSwgc2V0IGl0IVxyXG4gIEBpZiBub3QgbWFwLWhhcy1rZXkoJFJldHVybiwgJ2NsZWFyJykge1xyXG4gICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnY2xlYXInOiBub25lKSk7XHJcbiAgfVxyXG5cclxuICAvLyBMZWZ0IEZpeGVkIEd1dHRlcnNcclxuICBAaWYgJEZpeGVkLUd1dHRlciB7XHJcbiAgICBAaWYgaW5kZXgoJFN0eWxlLCAnc3BsaXQnKSB7XHJcbiAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJyN7JEd1dHRlci1Qcm9wZXJ0eX0tI3skRGlyfSc6ICRHdXR0ZXItU3BhbiAvIDIpKTtcclxuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyRPcHB9JzogJEd1dHRlci1TcGFuIC8gMikpO1xyXG4gICAgfVxyXG4gICAgQGVsc2Uge1xyXG4gICAgICBAaWYgbm90ICRFbmQtUm93IHtcclxuICAgICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCcjeyRHdXR0ZXItUHJvcGVydHl9LSN7JE9wcH0nOiAkR3V0dGVyLVNwYW4pKTtcclxuICAgICAgfVxyXG4gICAgICBAZWxzZSB7XHJcbiAgICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyRPcHB9JzogMCkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAcmV0dXJuICRSZXR1cm47XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBIYXBweSBTeW50YXggZm9yIElzb2xhdGlvblxyXG4vL1xyXG4vLyBNYWtlcyB3b3JraW5nIHdpdGggSXNvbGF0aW9uIGVhc2llciwgYXMgaXQgbW92ZXMgQ2xlYXIgdG8gYSAxc3QgY2xhc3MgY2l0aXplbiBvZiB0aGUgbWl4aW4sIGFuZCBhdXRvbWF0aWNhbGx5IGJ1aWxkcyB0aGUgdmVyYm9zZSBncmlkLXNwYW4gbWl4aW4gY2FsbFxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuQG1peGluIGlzb2xhdGlvbi1zcGFuKCRTcGFuLCAkTG9jYXRpb24sICRjbGVhcjogZmFsc2UsICRncmlkOiBmYWxzZSwgJGd1dHRlcjogZmFsc2UsICRndXR0ZXItc3R5bGU6IGZhbHNlLCAkZnJvbTogZmFsc2UpIHtcclxuICAkT3B0aW9uczogKCk7XHJcbiAgQGlmICRjbGVhciB7XHJcbiAgICAkT3B0aW9uczogbWFwLW1lcmdlKCRPcHRpb25zLCAoJ2NsZWFyJzogdW5xdW90ZSgkY2xlYXIpKSk7XHJcbiAgfVxyXG4gIEBpZiAkZnJvbSB7XHJcbiAgICAkT3B0aW9uczogbWFwLW1lcmdlKCRPcHRpb25zLCAoJ2Zyb20nOiAkZnJvbSkpO1xyXG4gIH1cclxuXHJcbiAgJE9wdGlvbnM6IGlmKGxlbmd0aCgkT3B0aW9ucykgPiAwLCAkT3B0aW9ucywgbnVsbCk7XHJcbiAgQGluY2x1ZGUgZ3JpZC1zcGFuKCRTcGFuLCAkTG9jYXRpb24sICRncmlkLCAkZ3V0dGVyLCAnaXNvbGF0aW9uJywgJGd1dHRlci1zdHlsZSwgJE9wdGlvbnMpO1xyXG59XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gSGFwcHkgU3ludGF4IG9mIEFzeW1tZXRyaWMgR3JpZHNcclxuLy9cclxuLy8gTWFrZXMgd29ya2luZyB3aXRoIGFzeW1tZXRyaWMgZ3JpZHMgZWFzaWVyIVxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuQG1peGluIGFzeW1tZXRyaWMtc3BhbigkTG9jYXRpb24sICRTcGFuOiBmYWxzZSwgJGdyaWQ6IGZhbHNlLCAkZ3V0dGVyOiBmYWxzZSwgJGd1dHRlci1zdHlsZTogZmFsc2UsICRmcm9tOiBmYWxzZSwgJG91dHB1dC1zdHlsZTogZmFsc2UpIHtcclxuXHJcbiAgJFNwYW46IGlmKCRTcGFuICE9IGZhbHNlLCAkU3BhbiwgMSk7XHJcbiAgJG91dHB1dC1zdHlsZTogaWYoJG91dHB1dC1zdHlsZSAhPSBmYWxzZSwgJG91dHB1dC1zdHlsZSwgc2dzLWdldCgnYXN5bW1ldHJpYyBvdXRwdXQnKSk7XHJcblxyXG4gICRPcHRpb25zOiAoKTtcclxuICBAaWYgJGZyb20ge1xyXG4gICAgJE9wdGlvbnM6IG1hcC1tZXJnZSgkT3B0aW9ucywgKCdmcm9tJzogJGZyb20pKTtcclxuICB9XHJcbiAgJE9wdGlvbnM6IGlmKGxlbmd0aCgkT3B0aW9ucykgPiAwLCAkT3B0aW9ucywgbnVsbCk7XHJcblxyXG4gIEBpbmNsdWRlIGdyaWQtc3BhbigkU3BhbiwgJExvY2F0aW9uLCAkZ3JpZCwgJGd1dHRlciwgJG91dHB1dC1zdHlsZSwgJGd1dHRlci1zdHlsZSwgJE9wdGlvbnMpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
