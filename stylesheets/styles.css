@import 'https://fonts.googleapis.com/css?family=Crete+Round|Open+Sans';.eq-block:before{display:none;content:"Small: 300, Medium: 400, Large: 500"}.eq-block--detail:before{display:none;content:"xxSmall: 0, xSmall: 150, Small: 300, Medium: 400, Large: 500, xLarge: 650, xxLarge: 800"}h1,.b-siteName,h2,h3,h4,h5,h6,.heading{font-family:'Crete Round', serif;font-weight:normal;color:#f26157}body,p,li,a{font-family:'Open Sans', sans-serif;color:#2c2a29}p{line-height:1.618em;font-size:1.25em}a{color:#f7db0c}a:hover{color:#f9e23d}body{background-color:#fffefb;font-size:16px}section{width:100%;float:left;padding:6em 0}.btn{padding:0.618em;background-color:#f7db0c;color:#2c2a29;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #f7db0c}.btn:hover{background-color:#f9e23d;border-color:#f9e23d;color:#464342}.btn--outline{padding:0.618em;background-color:#f7db0c;color:#f7db0c;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #f7db0c;background-color:#fffefb}.btn--outline:hover{background-color:#f9e23d;border-color:#f9e23d;color:#f9e23d}.btn--outline:hover{background-color:#fffefb}.navList{padding:0;margin:0;list-style:none}.navList li{display:inline-block;padding:0 1em;margin:0;float:left;border-right:1px solid #f0efec;box-shadow:0 1px 0x 0 #fffefb}.navList li:last-child{box-shadow:none;border-right:0}.navList li a{font-size:1.2em;color:#f26157;text-decoration:none;text-transform:uppercase}.navList li a:hover{color:#f47c73;text-decoration:underline}.container{width:87.66%;margin:0 auto}.b-ctaCard{width:100%;float:left}.b-ctaCard__imgWrapper{width:100%;float:left;padding:0;margin:0;position:relative}.b-ctaCard__img{width:100%;height:auto;padding:0;margin:0;float:left;border-top-left-radius:0.382em;border-top-right-radius:0.382em}.b-ctaCard__caption{position:absolute;bottom:0;width:97%;float:left;background-color:rgba(44,42,41,0.6);color:#fffefb;padding:0.618em 1.5%;margin:0}.b-ctaCard__caption p{color:#fffefb;font-size:1em;line-height:1.618em;padding:0;margin:0}.b-ctaCard__cta{width:97%;float:left;background-color:#f26157;height:3em;padding:0.618em 1.5%;border-bottom-left-radius:0.382em;border-bottom-right-radius:0.382em}.b-ctaCard__cta .btn{padding:0.618em;background-color:#fffefb;color:#f26157;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #fffefb;float:left}.b-ctaCard__cta .btn:hover{background-color:#fff;border-color:#fff;color:#f68e86}.b-ctaCard__cta .btn--donate{padding:0.618em;background-color:#fffefb;color:#fffefb;border-radius:0.3em;font-weight:bold;text-decoration:none;border:2px solid #fffefb;background-color:#f26157;float:left;margin-left:1em}.b-ctaCard__cta .btn--donate:hover{background-color:#fff;border-color:#fff;color:#fff}.b-ctaCard__cta .btn--donate:hover{background-color:#f26157}.b-primaryNav{padding:2.5em 0}.b-primaryNav .navList{float:right}.b-siteName{width:50%;float:left;font-size:2em;padding:1em 0;margin:0;font-size:1.875em;line-height:1.3348em;margin-top:1.07985em;padding-top:0em;padding-bottom:0em;margin-bottom:.41245em}.m-navbar{width:100%;float:left;margin-top:0em;padding-top:1.56422em;padding-bottom:1.56422em;margin-bottom:0em}.m-navbar .b-siteName{float:left}.m-navbar .b-primaryNav{float:right}.s-opener{width:100%;float:left;padding:3em 0;background:-webkit-linear-gradient(left, #f26157, #f27d5f);background:linear-gradient(90deg, #f26157, #f27d5f);background-size:400% 400%;-webkit-animation:open 40s ease infinite;animation:open 40s ease infinite}@-webkit-keyframes open{0%{background-position:0% 51%}50%{background-position:100% 50%}100%{background-position:0% 51%}}@keyframes open{0%{background-position:0% 51%}50%{background-position:100% 50%}100%{background-position:0% 51%}}.s-opener__kicker{width:48%;float:left;margin-right:2%}.s-opener__kicker h1,.s-opener__kicker .b-siteName{color:#fffefb;font-size:3.272em}.s-opener__cta{width:48%;float:left;margin-left:2%}@media (min-width: 0) and (max-width: 60rem){.s-opener__kicker{width:100%;float:left;margin:0;margin-top:.77335em;padding-top:0em;padding-bottom:0em;margin-bottom:.77335em}.s-opener__cta{width:100%;float:left;margin:0;margin-top:.77335em;padding-top:0em;padding-bottom:0em;margin-bottom:.77335em}}@media (min-width: 0){.s-header .b-siteName{float:none;width:100%;margin:0 auto;padding:16px 0}.s-header .b-primaryNav{float:none;width:100%;margin:0 auto;padding:16px 0}}@media (min-width: 48rem){.s-header .b-siteName{padding:0;width:35.89744%;float:left;margin-right:-100%;margin-left:0;clear:none}.s-header .b-primaryNav{padding:0;width:61.53846%;float:right;margin-left:0;margin-right:0;clear:none}}@media (min-width: 60rem){.s-header .b-siteName{padding:0;width:23.72881%;float:left;margin-right:-100%;margin-left:0;clear:none}.s-header .b-primaryNav{padding:0;width:74.57627%;float:right;margin-left:0;margin-right:0;clear:none}}@media (min-width: 78rem){.s-header .b-siteName{padding:0;width:23.80952%;float:left;margin-right:-100%;margin-left:0;clear:none}.s-header .b-primaryNav{padding:0;width:74.60317%;float:right;margin-left:0;margin-right:0;clear:none}}

/*# sourceMappingURL=data:application/json;base64, */
